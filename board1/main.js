window.Event = new Vue();

Vue.component('pro-map', {
    template: `
        <div class="pro-map-wrap" @mouseover="wakeApp" @mouseout="sleepApp">
            <div class="pro-map-contents">
                <valucre-map :model="activeMap"></valucre-map>
                <div class="anno">
                    <div class="annoL">{{activeName}}</div>
                    <div class="annoR">{{activeCoords}}</div>
                </div>
            </div>
            <div class="pro-map-info">
                <mod-keys></mod-keys>
            </div>
        </div>
    `,
                // <div class="pin-grid"></div>
    data() {
        return {
            msg: 'Hello world-map',
            map: {
                genesaris: {
                    name: 'genesaris',
                    cities: [

                    ],
                    towns: [

                    ],
                    places: [

                    ],
                },
                orisia: {
                    name: 'orisia',
                    cities: [

                    ],
                    towns: [

                    ],
                    places: [

                    ],
                },
                alterion: {
                    name: 'alterion',
                    cities: [

                    ],
                    towns: [

                    ],
                    places: [

                    ],
                },
                renovatio: {
                    name: 'renovatio',
                    cities: [

                    ],
                    towns: [

                    ],
                    places: [

                    ],
                },
                terrenus: {
                    name: 'terrenus',
                    cities: [
                        {
                            name: 'Ignatz',
                            area: 'body',
                            link: '',
                            x: 47.5, 
                            y: 50,
                        },
                    ],
                    towns: [
                        {
                            name: 'Selemath',
                            area: 'body',
                            link: '',
                            x: 18.7,
                            y: 38.5,
                        },
                    ],
                    places: [
                        {
                            name: 'Hills of Lost Hearts',
                            area: 'body',
                            link: '',
                            x: 11,
                            y: 28,
                        },
                    ],
                },
            },
        }
    },
    methods: {
        wakeApp(evt) {
            this.$root.isWake = true;
        },
        sleepApp(evt) {
            this.$root.isWake = false;
        },
        switchMaps(name) {
            console.log(`Switching map to ${name}`)
        }
    },
    computed: {
        activeName: function() {
            return this.$root.activeName;
        },
        activeMap: function() {
            var self = this, which = self.activeName;
            return this.map[which];
        },
        activeCoords: function() {
            return this.$root.activeCoords;
        }
    },
    mounted() {
        console.log(this.msg);
        var self = this;
        Event.$on('switchMaps', self.switchMaps)
    }
})

Vue.component('valucre-map', {
    props: {
        model: Object,
    },
    data() {
        return {
            active: 4,
            list: ['genesaris', 'orisia', 'alterion', 'renovatio', 'terrenus']
        }
    },
    computed: {
        activeName: function() {
            var which = this.active;
            return this.list[which];
        },
    },
    template: `
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000">
            <rect class="map-background" x="0" y="0" width="1000" height="1000"/>
            <grid size="1000" rowcol="8"></grid>
            <terrenus v-if="activeName == 'terrenus'" :model="model"></terrenus>
            <g class="bumper" @click="clickBumper(1)">
                <path class="map-bumper-btn" d="M983,376.5h18.4a0,0,0,0,1,0,0v249a0,0,0,0,1,0,0H983a31.6,31.6,0,0,1-31.6-31.6V408.1A31.6,31.6,0,0,1,983,376.5Z" />
                <polyline class="map-bumper-label" points="961.38 474.13 988.25 501 961.38 527.87" />
            </g>
            <g class="bumper" @click="clickBumper(-1)">
                <path class="map-bumper-btn" d="M31.6,376.5H50a0,0,0,0,1,0,0v249a0,0,0,0,1,0,0H31.6A31.6,31.6,0,0,1,0,593.9V408.1A31.6,31.6,0,0,1,31.6,376.5Z" transform="translate(51.38 1002) rotate(180)" />
                <polyline class="map-bumper-label" points="41.25 474.13 14.38 501 41.25 527.87" />
            </g>
            <g id="places">
                <place-marker 
                    v-for="marker in model.places" 
                    :xpos="marker.x"
                    :ypos="marker.y" 
                    :key="marker.name"
                    :label="marker.name"
                    :area="marker.area">
                </place-marker>
            </g>
            <g id="towns">
                <town-marker 
                    v-for="marker in model.towns" 
                    :xpos="marker.x"
                    :ypos="marker.y" 
                    :key="marker.name"
                    :label="marker.name"
                    :area="marker.area">
                </town-marker>
            </g>
            <g id="cities">
                <city-marker 
                    v-for="marker in model.cities" 
                    :xpos="marker.x"
                    :ypos="marker.y" 
                    :key="marker.name"
                    :label="marker.name"
                    :area="marker.area">
                </city-marker>
            </g>
            <mini-world></mini-world>
        </svg>
    `,
    mounted() {
        this.setActive();
    },
    methods: {
        clickBumper(num) {
            if (num > 0) {
                this.active = (this.active < this.list.length - 1) ? this.active + 1 : 0;
            } else {
                this.active = (this.active > 0) ? this.active - 1 : this.list.length - 1;
            }
            // console.log(`${num} : ${this.active} : ${this.list.length}`)
            this.setActive();
            Event.$emit('switchMaps', this.activeName)
        },
        setActive() {
            // console.log('Sending active to parent')
            this.$root.active = this.active;
            this.$root.activeName = this.activeName;
        }
    }
})

Vue.component('place-marker', {
    props: {
        xpos: Number,
        ypos: Number,
        area: String,
        label: String,
    },
    // < rect class= "place-marker" : x = "xPosition" : y = "yPosition" width = "50" height = "50" rx = "25" />
    // <rect class="place-marker" x="102" y="272" width="16" height="16" />
    template: `
        <g id="place">
            <rect    
                :x="xPosition" 
                :y="yPosition" 
                :width="width" 
                :height="width" 
                :rx="getRadius(width)"
                @mouseout="hover(false, area)"
                @mouseover="hover(true, area)"
                :class="getType(area)"
                @click="updateSelection"/>
        </g>
    `,
    // :transform="(isHover) ? 'scale(2)' : 'scale(1)'" 
    data() {
        return {
            unit: 0,
            isHover: false,
            isSelected: false,
            xPosition: 0,
            yPosition: 0,
            width: 16,
        }
    },
    methods: {
        getType(area) {
            var result;
            console.log(`${this.isSelected} : ${this.isHover} : ${area}`)
            if (this.isSelected) {
                result = 'map-marker-place-selected'
            } else {
                if ((this.isHover) && (!this.$root.selection.length)) {
                   result = 'map-marker-place-hover'
               } else {
                   result = 'map-marker-place-idle'
               }
            }
            return result;
        },
        getRadius(width) {
            console.log(width)
            var result;
            if ((this.isHover) || (this.isSelected)) {
                result = width/2;
            } else {
                result = 0;
            }
            return result;
        },
        getX() {
            return (Number(this.xpos) * 10 - (this.width / 2));
        },
        getY() {
            return (Number(this.ypos) * 10 - (this.width / 2));
        },
        hover(state) {
            if ((state) || (this.isSelected)) {
                if (this.isSelected) {
                    console.log(`${this.label} is already selected`)                    
                    this.width = 50;
                } else if (this.$root.selection.length) {
                    this.width = 16;
                } else {
                    this.isHover = true;
                    console.log(`Hovering in area ${this.area}`)
                    this.width = 50;
                }
                Event.$emit('hoverArea', this.area)
            } else {
                this.isHover = false;
                this.width = 16;
            }
            this.xPosition = this.getX();
            this.yPosition = this.getY();
        },
        updateSelection() {
            if (this.$root.isDefault) {
                console.log('Changing the selection');
                this.isSelected = !this.isSelected
                if (this.isSelected) {
                    Event.$emit('updateSelection', this.label);
                } else {
                    Event.$emit('clearSelection');
                }
            }
        },
        clearSelection() {
            this.isSelected = false;
        }
    },
    mounted() {
        Event.$on('clearSelection', this.clearSelection)
        console.log(`Setting place at ${this.xpos}, ${this.ypos}`)
        this.xPosition = this.getX();
        this.yPosition = this.getY();
        console.log(`Setting place at ${this.xPosition}px, ${this.yPosition}px`)
    }
})


Vue.component('town-marker', {
    props: {
        xpos: Number,
        ypos: Number,
        area: String,
        label: String,
    },
    template: `
        <g 
            id="town"
            @mouseout="hover(false, area)"
            @mouseover="hover(true, area)"
            @click="updateSelection">
                <path 
                    :class="getType(area)" 
                    d="M18.77,39.25l-9.6-17a1.42,1.42,0,0,1,1.23-2.11H29.6a1.42,1.42,0,0,1,1.23,2.11l-9.6,17A1.41,1.41,0,0,1,18.77,39.25Z" 
                    :transform="'translate(' + xPosition + ' ' + yPosition + ')'"/>
        </g>
    `,
    data() {
        return {
            unit: 0,
            isHover: false,
            isSelected: false,
            xPosition: 0,
            yPosition: 0,
            width: 16,
        }
    },
    methods: {
        getType(area) {
            var result;
            console.log(`${this.isSelected} : ${this.isHover} : ${area}`)
            if (this.isSelected) {
                result = 'map-marker-town-selected'
            } else if (this.isHover) {
                result = 'map-marker-town-hover'
            } else {
                result = 'map-marker-town-idle'
            }
            return result;
        },
        getX() {
            return (Number(this.xpos) * 10 - (this.width * 1.25));
        },
        getY() {
            return (Number(this.ypos) * 10 - (this.width * 2.5));
        },
        hover(state) {
            if ((state) || (this.isSelected)) {
                if (this.isSelected) {
                    console.log(`${this.label} is already selected`)
                } else if (this.$root.selection.length) {
                    // Already has selection
                } else {
                    this.isHover = true;
                    console.log(`Hovering in area ${this.area}`)
                }
                Event.$emit('hoverArea', this.area)
                // this.width = 50;
            } else {
                this.isHover = false;
                // this.width = 16;
            }
            this.xPosition = this.getX();
            this.yPosition = this.getY();
        },
        updateSelection() {
            if (this.$root.isDefault) {
                console.log('Changing the selection');
                this.isSelected = !this.isSelected
                if (this.isSelected) {
                    Event.$emit('updateSelection', this.label);
                } else {
                    Event.$emit('clearSelection');
                }
            }
        },
    },
    mounted() {
        console.log(`Setting town at ${this.xpos}, ${this.ypos}`)
        this.xPosition = this.getX();
        this.yPosition = this.getY();
        console.log(`Setting town at ${this.xPosition}px, ${this.yPosition}px`)
    }
})


Vue.component('city-marker', {
    props: {
        xpos: Number,
        ypos: Number,
        area: String,
        label: String,
    },
    template: `
        <g 
            id="city"
            @mouseout="hover(false, area)"
            @mouseover="hover(true, area)"
            @click="updateSelection">
                <path 
                    :class="getType(area)" 
                    d="M20,0A15.18,15.18,0,0,0,5,15.37c0,7,10.17,19.75,13.76,24a1.6,1.6,0,0,0,2.47,0c3.59-4.28,13.77-17,13.77-24A15.19,15.19,0,0,0,20,0Zm0,22.38a6,6,0,1,1,5.85-6A5.9,5.9,0,0,1,20,22.39Z"                    :transform="'translate(' + xPosition + ' ' + yPosition + ')'" />
        </g>
    `,
    data() {
        return {
            unit: 0,
            isHover: false,
            isSelected: false,
            xPosition: 0,
            yPosition: 0,
            width: 16,
        }
    },
    methods: {
        getType(area) {
            var result;
            console.log(`${this.isSelected} : ${this.isHover} : ${area}`)
            if (this.isSelected) {
                result = 'map-marker-city-selected'
            } else if (this.isHover) {
                result = 'map-marker-city-hover'
            } else {
                result = 'map-marker-city-idle'
            }
            return result;
        },
        getX() {
            return (Number(this.xpos) * 10 - (this.width * 1.25));
        },
        getY() {
            return (Number(this.ypos) * 10 - (this.width * 2.5));
        },
        hover(state) {
            if ((state) || (this.isSelected)) {
                if (this.isSelected) {
                    console.log(`${this.label} is already selected`)
                } else if (this.$root.selection.length) {
                    // Already has selection
                } else {
                    this.isHover = true;
                    console.log(`Hovering in area ${this.area}`)
                }
                Event.$emit('hoverArea', this.area)
                // this.width = 50;
            } else {
                this.isHover = false;
                // this.width = 16;
            }
            this.xPosition = this.getX();
            this.yPosition = this.getY();
        },
        updateSelection() {
            if (this.$root.isDefault) {
                console.log('Changing the selection');
                this.isSelected = !this.isSelected
                if (this.isSelected) {
                    Event.$emit('updateSelection', this.label);
                } else {
                    Event.$emit('clearSelection');
                }
            }
        },
    },
    mounted() {
        console.log(`Setting town at ${this.xpos}, ${this.ypos}`)
        this.xPosition = this.getX();
        this.yPosition = this.getY();
        console.log(`Setting town at ${this.xPosition}px, ${this.yPosition}px`)
    }
})


// Vue.component('city-marker', {
//     props: {
//         xpos: Number,
//         ypos: Number,
//         area: String,
//         label: String,
//     },
//     // < rect class= "place-marker" : x = "xPosition" : y = "yPosition" width = "50" height = "50" rx = "25" />
//     // <rect class="place-marker" x="102" y="272" width="16" height="16" />
//     template: `
//         <g id="places">
//             <rect    
//                 :x="xPosition" 
//                 :y="yPosition" 
//                 :width="width" 
//                 :height="width" 
//                 :rx="(isHover) ? width/2 : 0"
//                 @mouseout="hover(false, area)"
//                 @mouseover="hover(true, area)"
//                 :class="getType(area)"
//                 @click="updateSelection"/>
//         </g>
//     `,
//     // :transform="(isHover) ? 'scale(2)' : 'scale(1)'" 
//     data() {
//         return {
//             unit: 0,
//             isHover: false,
//             isSelected: false,
//             xPosition: 0,
//             yPosition: 0,
//             width: 16,
//         }
//     },
//     methods: {
//         getType(area) {
//             var result;
//             console.log(`${this.isSelected} : ${this.isHover} : ${area}`)
//             if (this.isSelected) {
//                 result = 'place-marker-selected'
//             } else if (this.isHover) {
//                 result = 'place-marker-hover'
//             } else {
//                 result = 'place-marker-idle'
//             }
//             return result;
//         },
//         getX() {
//             return (Number(this.xpos) * 10 - (this.width / 2));
//         },
//         getY() {
//             return (Number(this.ypos) * 10 - (this.width / 2));
//         },
//         hover(state) {
//             if ((state) || (this.isSelected)) {
//                 if (this.isSelected) {
//                     console.log(`${this.label} is already selected`)
//                 } else {
//                     this.isHover = true;
//                     console.log(`Hovering in area ${this.area}`)
//                 }
//                 Event.$emit('hoverArea', this.area)
//                 this.width = 50;
//             } else {
//                 this.isHover = false;
//                 this.width = 16;
//             }
//             this.xPosition = this.getX();
//             this.yPosition = this.getY();
//         },
//         updateSelection() {
//             if (this.$root.isDefault) {
//                 console.log('Changing the selection');
//                 this.isSelected = !this.isSelected
//                 if (this.isSelected) {
//                     Event.$emit('updateSelection', this.label);
//                 } else {
//                     Event.$emit('clearSelection');
//                 }
//             }
//         },
//     },
//     mounted() {
//         console.log(`Placing marker at ${this.xpos}, ${this.ypos}`)
//         this.xPosition = this.getX();
//         this.yPosition = this.getY();
//         console.log(`Placing marker at ${this.xPosition}px, ${this.yPosition}px`)
//     }
// })






Vue.component('mini-world', {
    template: `
        <g id="world">
            <rect id="_2x1bg" class="map-world-bg" y="875" width="250" height="125"/>
            <path id="renovatio" :style="getStyle('renovatio')" d="M158.3,945.25v.18s.31-.14.37-.07-.13.15.23.36a1,1,0,0,0,.63.21,3.46,3.46,0,0,0,.72-.39c.23.27-.2.64-.36.82-.34.35-.24.26-.69.23-.11,0-.28-.17-.42-.18s-.37.07-.44.07-.66.21-.62.18c-.19.16,1.09,1.19,0,1.13-.82,0-.27-.73-.42-1s-.59-.14-.68-.4c-.19-.52.57-.15.81-.23S158.06,945.25,158.3,945.25Zm7.88,8.89a.58.58,0,1,0-.92.71c.19.3.32.3.52.19C165.66,955.11,166.18,954,166.18,954.14ZM156,949.68c-.68.09-.36.54-.68.71a8.14,8.14,0,0,1-1.34.16c-.59-.11-.7-.72-.73.16,0,.16.21.37.26.55,0-.1-.7.19-.77.16a2.58,2.58,0,0,1-.56,1.55c-.13.15-.73.9-.89.87.12.14.11.24-.17.24.19-.73-.66-.71-.61-.19s1.11.77.78.34c.2.07.39-.32.51-.26.33.17.42.87.49,1.19.21.92.34.68,1.14.85.25.06,2.38,1.19,1.56,1.75-.63.42-.84-.77-1.2-.93a.85.85,0,0,0-.36,0c-.36.21.31.3.32.35.06.35,0,.6.08.89.16.59.22.29.63.6.2.15.41.56.59.66s.37-.17.45-.14.33.41.52.32.72-1.22.83-.91c.21.61.79-.14.18,0l-.13-.07a.78.78,0,0,1,.34-.09c.09-.15-.35-.72-.3-.92a1.94,1.94,0,0,1,1.35-.69.19.19,0,0,1,0-.18c.46,0-.47.75-.51.7a1.72,1.72,0,0,0,.62.25c.21-.05.13-.43.37-.48s.49.34.73.46c0-.72.42-.23.66-.63a2.26,2.26,0,0,0,0-.93c0-.13-.41-.34-.4-.62,0-.49.51-.29.56-.33s.16-.3.17-.3c.15-.22.14-.63.25-.81s.24-.47.56-.38,0,.45.37.37c.06,0,.25-.36.31-.39a1.59,1.59,0,0,1,.54-.2c.12,0,1,0,.4-.12.75,0,.1-.49.14-.67a.44.44,0,0,1,.16-.06c0-.12-.57-.41-.62-.46-.4-.45-.32-1.16-.84-1.32-.13-.05-.66.12-.72,0s.28-.39.29-.43c0,.13-1.11-1.34-1.07-1.32-.18-.09-.37.2-.41.18s-.32-.36-.42-.42-.65.52-.72.66c-.07-.39-.4-.12-.57-.25s0-.31-.14-.44a.71.71,0,0,0-1.13.21c-.09.13.3.19.09.35a.79.79,0,0,1-.36.11c.24-.23-.47.08-.35,0-.19.08.06.26-.06.38C156.22,949.68,156.15,949.64,156,949.68Zm2.68,5.53c.06,0-.14.58-.17.6s-.34-.42-.34-.5.48-.54.54-.59.08-.26.21-.35a6.58,6.58,0,0,1,.94,0c-.22.66-.79.57-1.23.72C158.6,955.12,158.62,955.18,158.72,955.21Zm-2.26-2.39c0,.06-.29.11-.4.3a5.6,5.6,0,0,1-.12,1c-.18.07-.86-.53-.93-.67s-.27-.71,0-.85c-.08.05,1.58-.13,1.34-.22C156.33,952.34,156.44,952.85,156.46,952.82Zm-.87-1.81a2.69,2.69,0,0,1,.55-.69c.52-.09.6.87.79.85-.29.2,0,.64-.17.81-.33.37-.45-.51-.45-.59s.22-.34.23-.51-.43-.07-.39,0,.24,0,.12.12S155.62,951.07,155.59,951Zm5.45.2c0,.4-.91.25-1,.14s-.29-.94-.36-.78.67-.14.74-.12A1.23,1.23,0,0,1,161,951.21Zm-7.18,1.17c-.25,0-.09-.47,0-.42A.22.22,0,0,1,153.86,952.38Zm4.41,4.14Zm4.27-2.58c.19.12-.77.38-.72.36-.11.06,0,.26-.22.29s-.33-.11-.47-.1-.67.7-.69.78c-.1.46.39,1.12.18,1.56,0-.12-.45.46-.39.39-.29.32-.1.36-.5.62a.38.38,0,0,1-.73,0c-.14,0-.36.19-.5.2-.81,0-.71,0-.84.79,0-.23.17.8-.08.53.22.23.25.05.65,0a5.1,5.1,0,0,0,3.13-1.08c.43-.44.47-1.1.9-1.53s.6-.17.6-.75c0-.33-.48-.63-.45-.85s.33-.21.39-.34.14-.66.27-.79c.42-.43.65,0,1.2-.31.33-.2.68-1.28.07-1.45-.27-.07-.23.17-.45.36l-.3.29c-.14.13-.85.47-.56.79-.17-.12-.33,0-.48.08C162.58,953.81,162.71,954,162.54,953.94Zm-.15,1.75c-.11.06-.58,1.82-1,1.18s1.06-1.2,1-1.33C162.46,955.59,162.46,955.63,162.39,955.69Zm1.52,3.53-.43.16a.18.18,0,0,1,.14.11,12.81,12.81,0,0,1-1.67.9,7.22,7.22,0,0,1-1.65,1c-.36.09-.41-.27-.82.08s-.35.38-.06.69a3.5,3.5,0,0,0,1,.38c.46.14-.06.32.45.09.28-.13.25-.35.43-.47s.5-.08.68-.36c.3-.47-.08-.69.47-1.06.06,0,.23.1.33,0s.15-.3.26-.39l.45-.38C163.7,959.81,164.27,959.52,163.91,959.22Zm-2.68,2.24c.2.25-.41,1-.53.75C160.69,962.19,160.89,961,161.23,961.46Zm-9.54-10.26c.33.5.84-.8.88-.83s.26.14.44-.13.12-.37.24-.58,1-1,.62-1.13c-.55-.25-1.33.94-1.59,1.21S151.22,950.5,151.69,951.2ZM152,957a.81.81,0,0,1-.62-.25c-.21-.36.16-.3.15-.57s-.12-1.43-.46-1.2c-.57.41,0,1,.08,1.55s-.12.75.33,1.26C153.45,959.94,152.09,957,152,957Zm2.86,3.22c.07.12.82.68.59.2.3.2,1.54,1.44,1.54.15,0-.84-.49-.34-.85-.38-.13,0-.26-.53-.44-.16-.23-.5-.3.21-.35.22S155,960.09,154.89,960.2Zm.5-13.31s-1.38-1.4-1.51.2c.11,0-.41-.23-.31-.22-.14,0-.77.81.32.61.4-.07,1.09-.58,1.48-.27Zm.51.91c.66-1.25-2,.32-1.76.55.06.06.14-.11.18-.1.29,0,0,.71.64.29.15-.09.32-.41.46-.52S155.74,948.11,155.9,947.8Zm-3.93,12a1.11,1.11,0,0,0,0,1.29c.11.15.12.35.39.38s0-.12.06-.36c0,0,0-.44,0-.52s.23-.23.23-.32C152.68,960,152.25,959.38,152,959.76Zm8.31-12c-.3.09-.52-.2-.59.29,0,.25.36.53.52.57,1,.28,1.15-1.09.15-.71C160.43,947.8,160.41,947.75,160.28,947.76Zm4.11,1.68c0-.45-.34-1.18-.78-1.27-.09,0-.23.71-.2.81S164.37,949.79,164.39,949.44Zm-14.8,3.15c.45.08,1.29-.88.61-1.23S149.52,952.57,149.59,952.59Zm8.84,9.69a5.62,5.62,0,0,0-1,0c-.29.12-.49-.09-.26.35C157.61,963.47,159.06,962.54,158.43,962.28Zm5-11.86c-.21-.39-.09-.49-.47-.69s-.52,0-.33.53a3.16,3.16,0,0,0,.28.45C163,950.76,163.66,950.85,163.44,950.42Zm-9.28,11.26c1.16.17.29-1-.3-1C153,960.76,153.94,961.65,154.16,961.68Zm-3.24-11.58c.4.08,0-.4.05-.44s.46.07.49-.13-.15-.79-.64-.51C150.48,949.21,150.62,950.05,150.92,950.1Zm8.51,10.38c-.22.12-.85.27-.8.56,0-.18.77.13.75.14C159.82,961.05,160.42,960,159.43,960.48Zm-3.72-11c.34.07.49-.35.15-.45-.17-.05-.7.44-.71.52C155.12,950.27,156,949.57,155.71,949.52Zm8,7.58c-.3-.19-.73,1-.18,1C163.73,958,163.82,957.2,163.67,957.1Zm-2.24,2.15c0-.14-.65,1.59.38.34A.42.42,0,0,1,161.43,959.25Zm-11.1-2.17c-.73,0,.53,1.14.61.95a5.12,5.12,0,0,0-.49-.45C150.84,957.46,150.36,957.08,150.33,957.08Zm-.71-1.81,0-.53s-.69-.06-.62.28C149,955,149.58,955.41,149.62,955.27Zm-.07-.62c.2.2.37-.44.34-.52C149.73,953.77,149.22,954.3,149.55,954.65Zm.68-5.47c-.3-.09.1.77.18.75a2.87,2.87,0,0,0,.23-.7C150.55,949.14,150.35,949.21,150.23,949.18Zm.08,7.6c0-.79-.54-.27-.36-.1C149.93,956.66,150.32,957,150.31,956.78Zm9.42-7.66c.14.13.22-.19,0-.23Zm-4.82,11.06c.06-.09-.06-.25-.16-.15S154.83,960.24,154.91,960.18Zm-.75-3.45c-.3-.29,0,.32,0,.2A.24.24,0,0,0,154.16,956.73Zm2.09-6c0-.17-.22-.09-.2,0S156.26,950.87,156.25,950.72Zm-11.59-1.45s-.59.18-.68.15a1.21,1.21,0,0,1-.54-.9c-.05-.41,0-1,.38-1.23a.88.88,0,0,1,1.25.7c0,.3-.29.39-.34.59C144.65,949,145,948.92,144.66,949.27Zm-2.39-1.55c0-.12-.65-.34-.46.36C142,948.59,142.25,948.23,142.27,947.72Zm.3.77c-.23,0-.67.33-.34.5S142.64,948.49,142.57,948.49Z"/>
            <path id="alterion" :style="getStyle('alterion')" d="M119.24,961.26c-.1,0-.16.13-.28.11s0-.21,0-.21-.23-.22-.21-.21-.31.19-.38.16c-.53-.27.38-1,.52-1.19s-.54-.47-.58-.5.38-.42.35-.42.2-.13.33-.11-.17.24,0,.27.15-.23.15-.24.4.06.47,0,0-.17-.09-.16a8.6,8.6,0,0,1,1.44-.22c.52.08.51.2.5.55,0,.1-.06,1-.07,1s0-.1-.11-.06a.2.2,0,0,0,0,.11c0-.19.37.57.14.34a0,0,0,0,1,.06,0l-.21,0a4.45,4.45,0,0,1,0,.74c-.06.06-.95.33-.9.46,0,0,.26-.62.11-.65-.32,0,.25-.45,0-.55,0,0-.06.17-.14.15s.07-.16.07-.16c-.05-.26-.45.37-.3.31-.48.2,0,.25-.28-.06C120,960.77,119.34,961.21,119.24,961.26Zm-.92.41v-.23C118.22,961.38,118.26,961.75,118.32,961.67Zm2.62-.22c0-.05-.17,0-.12.08S120.93,961.48,120.94,961.45Zm-1.69-.15s.23,0,.2,0S119.15,961.27,119.25,961.3Zm1.27-.66s0,.14,0,.14S120.55,960.63,120.52,960.64Zm-.07,1.09c0-.07-.06,0-.07,0S120.45,961.76,120.45,961.73Zm.27-.14s0,0,0,0S120.71,961.54,120.72,961.59Zm-2.39-1.14s-.08,0,0,0S118.37,960.46,118.33,960.45Zm0,.9s-.07.07,0,.07S118.36,961.36,118.35,961.35Zm1.12-.13Zm1.06.49C120.58,961.55,120.43,961.83,120.53,961.71Zm-2.2,0s0,.11,0,.06S118.34,961.7,118.33,961.7Zm1.41-.78s0,0,0,0S119.74,960.89,119.74,960.92Zm-.92-1.1s0,0,0,0S118.82,959.82,118.82,959.82Zm14.19-.17a.7.7,0,0,0-.46.16.26.26,0,0,1-.23-.25,7.28,7.28,0,0,0-1-.14c-.7,0-1,.36-1.62.69a3.17,3.17,0,0,1-1.75.28,1.73,1.73,0,0,0-1,.3c-.17.1-.48.53-.65.48s0-.2,0-.26-.7.9-.83,1-.81.66-.71,1,.63.14.88.2c0,0,.11.35.07.38s-.24-.2-.36-.1-.21,1.19-.23,1.15c.06.14.8.33,1,.4.79.36.83.47.67,1.37-.06.36-.28.68-.19,1,.13.56.62.72,1,1a3.32,3.32,0,0,1,1.11,1c.2.23.11.24.3.36s.91.19.89.21a.4.4,0,0,0-.1.15c0,.16.41.14.46.33s-.18.44-.15.6.22,0,.32.15.22.46.42.53.64-.1.61-.2-.41.14-.48-.14c-.13-.49.18-.17.32-.14.54.09.74.45,1.32.5s.84-.29,1.32-.5c.18-.09.73,0,.92-.21.07-.07.07-.66.15-.67s.66.3.9.23c.65-.19,0-.25-.12-.56a3.05,3.05,0,0,1,.62-1.38c.25-.25.61-.19.48-.55s-.49-.12-.57-.22-.08-.11-.08-.45a.5.5,0,0,0,.31-.42.28.28,0,0,0-.3-.09c-.11-.11-.66-.15-.78-.29s0-.37,0-.52a5.28,5.28,0,0,1-.34-.91c0-.21.27-.6.3-.88.17,0,.23-.07.19-.23a2.43,2.43,0,0,1-.2-.25,1.59,1.59,0,0,0,.91-.37c.2-.32-.14-.73-.1-.83s.63-.12.42-.38-.2.14-.3-.34a5.07,5.07,0,0,0,0-.79c0-.81,0-.67-.82-.82a7.38,7.38,0,0,1-1.23-.29c-.19-.07-.12-.31-.36-.35S133.31,959.74,133,959.65Zm-2.61,3.42c-.09,0-3.06.83-2.86.19,0,0,1.55-.62,1.68-.63S130.56,963,130.4,963.07Zm.34,7.92c-.06,0-.13.31-.21.24s.2-.2,0-.3S131,970.87,130.74,971Zm2.13-7.4q.23.12,0,.24C132.72,963.84,132.74,963.59,132.87,963.59Zm-.72,6.37c-.14.18-.6.78-.88.29-.11-.19.22-.41.28-.53-.05.11.56-.46.48-.46C132.13,969.26,132.18,969.91,132.15,970Zm.84-5.19c-.1.4-.41.34-.37.87,0,.22.27.2.27.44s-.39.51-.24.7.55-.13.26.4c-.07.13-.35.31-.52.22s.05-.66,0-.82c-.12-.49-.65-.66-.64-1s.64-.67.76-.85.26-.16.3-.19-.14-.4,0-.48.59.38.57.42C133.32,964.68,133.08,964.38,133,964.77Zm.55,3.49c-.28.3-.53-.62-.49-.73s.52-.4.47-.12-.3,0-.21.41C133.34,967.94,133.65,968.13,133.54,968.26Zm.3.24c-.34,0-.12-.24-.13-.26S134.17,968.49,133.84,968.5Zm-8.71-.85c-.06-.31.84-.92.8-.53s-.28.27.34.82c.08.07.84.3.55.64s-.73.1-1-.12c0,0-.09-.34-.14-.42C125.5,967.77,125.13,968.22,125.13,967.65Zm10.75-1.42c-.58,0-.43-.91.19-.9C137.05,965.35,136.53,966.1,135.88,966.23ZM137,964.8c.68.35-.15,1.07-.58.44-.08-.12-.16-.47-.06-.6l.77-.23C137.32,964.47,137.1,964.78,137,964.8Zm-1.44.53c-.34,0-.08-1.2.28-.93S136.13,965.47,135.58,965.33Zm-10.55,3c.26,0,.83.59.4.61C125.29,969,124.54,968.33,125,968.36Zm7.51-2.81c-.06.11-.13.11-.19,0S132.52,965.46,132.54,965.55Z"/>
            <path id="orisia" :style="getStyle('orisia')" d="M103.7,944.55s.74.35.83.26c.34-.39-1.23-.75.14-.95a1.4,1.4,0,0,1,1.6,1.14c0,.09-.3,1.82-.35,2a2.82,2.82,0,0,1-.88,1.62,1.43,1.43,0,0,1-2.19-1.69c.19-.64.67-.59.84-1.27C103.81,945.23,102.76,944.55,103.7,944.55Zm-.28,3.12c.13.29.24.28.34,0C103.63,947.42,103.52,947.43,103.42,947.67Zm-3.51-1.54a.38.38,0,0,0-.1-.36c-.8-.32-.88,3.06.27,3.65.76.38.5.08,1.36-.17a4.63,4.63,0,0,1,1.11-.07c.67-.63-1.44-1.47-1.49-1.5S99,946.32,99.91,946.13Z"/>
            <path id="genesaris" :style="getStyle('genesaris')" d="M58.33,931.4c-.09,1.72,1.54,2.27-.66,2.74-.81.17-2.53.46-3-.33C53.26,931.51,58.37,930.94,58.33,931.4Zm-43.07,1.9c-1.52,0-.36-2-.26-2.24.3-.8-.21-2.32,1.41-1.79.18.06,1,1,1,1.21-.08.65-.66.39-1,.71-.07.08-.84-.17-.93.3-.14.76,1,.44,1.12.87C16.69,932.57,15.54,933.31,15.26,933.3Zm74.58,31.45c1.32.84,3.48-.42,4.64.61.41.36.93,1.67.52,2.19-.22.29-.65.07-1,.18s-1,.06-1.37.11c-.74.11-1.36.51-2.11.17-.56-.25-2.33-2.14-1.68-2.86.24-.28.79.63,1,.34s-.51-.39-.38-.61Zm-1.42-.31c0,.68.58.12.65.14C89.36,964.62,88.39,963.57,88.42,964.44ZM98.55,953c-2-.16-2.74-2.92-2.54-4.49s.45-4.76-1.08-6c-1-.81-1.32-.16-2.29-.64a11.84,11.84,0,0,1-1.74-2.09,8,8,0,0,1-1.43-2.61c-.64-1.65-.52-.89-1.82-1.37-1-.35-.93-.76-1.74-.3-.26.15-.37.78-.56,1a4.88,4.88,0,0,1-1.57.84c-.92.47-1.29.81-2.12.41s-1.66-1.4-2.7-1.87-1.76-1.18-2.65-1.61c-.25-.13-.6.26-1,.09s-1-.8-1.46-1.08a6.78,6.78,0,0,0-1.93-.89c-.68,0-.93.67-1.53.74s-1-.43-1.4-.27-.42,1.22-.88,1.22-1.14-3.55-1.77-3.63c-.34,0-.4.64-.65.68a8.1,8.1,0,0,0-1.36.3,5.65,5.65,0,0,0-2.45,1.24c-.79,1-1,2.13-.07,2.76.73.49,1.48.29,2.08,1.08a6.39,6.39,0,0,1,.42,2.9c-.54.61-.94-.28-1.58.07s-.53.58-.84,1.08-.62,2.14-1,2.51a4.92,4.92,0,0,1-1.84.74c-.23.06-.45.46-.74.54-.1,0-.31-.36-.58-.24-1.25.54-1.29,1.44-2.68,1.73-2.06.43-1.3-.67-.75-1.95a6.31,6.31,0,0,1,1.42-2.35c.48-.5,2.12-1.6,1.55-2.25-.37-.42-2,.15-2.4.18-2.35.18-1.08-.65-2.45-1.34-.55-.28-2.18.58-2.13.65-.22-.27,1-1.4.05-1.6-.7-.15-.32.94-.65,1.05-1.22.43.41.36-1-.06-.67-.21-1-1-1.9-.9-.24,0-.55.35-.68.4,0,0-.76.51-.82.56-.62.5-.14.43-.93.86-1.47.78-1.61,0-2.92-.55a3.39,3.39,0,0,0-2.58,0c-1.38.49-.77,1.74-1.77,2.39-.31.21-1.44.37-1.71.11-.57-.54.06-.68.37-1.13s.75-.15,1-.4a6.41,6.41,0,0,0,.86-2c0-1.24-1.08-.83-1.85-.78s-1.7,0-2.4.11-1.47.75-2.28.72c-1.6-.07-1.63-1.37-1.83-2.52-.09-.5-.26-1-.32-1.52,0-.3.29-.78.25-.93-.11-.48-1.62-.22-1.85-.3-.68-.27-.27-.48-.77-.84s-2.19,1.63-2.29,1.7c-.5.33-1.36.33-1.53,1.19s.58.65.76,1.38-.11.7-.05,1.28a7.64,7.64,0,0,0,1,2.91c.24.44.09.72.5,1.06.63.52,1.41.17,1.86.77,0,0,.5,1.81.58,2s.57,1.11.68,1.25c.46.57,1.25.8,1.73,1.29.75.75.69.65.94,1.87a9.2,9.2,0,0,0,1.62,3.75,24,24,0,0,0,3,3.91c.43.4,2.09.9,2,1.54-.08,1.22-1.47.41-2,.14a1.6,1.6,0,0,1-.71.19.75.75,0,0,1-.41-.89l-.81-.56a7.7,7.7,0,0,1-1.41-.42,3,3,0,0,1-1.4-1.26c-.13-.23.24-.56,0-.85s-.79-.48-1.09-.75a9.72,9.72,0,0,1-.79-.8c-.18-.22,0-.72-.45-1-.78-.48-2.77.81-2.19,1.5.23.28.32-.23.53-.06,0,0,0,1.75,0,1.74-.55-1.27-2-1.11-2.89-2.55-.32-.52-.61-1.77-1.1-2.16a6.87,6.87,0,0,0-1.59-.55c-.24-.09-.41-.33-.65-.43.07,0-1-.2-.87-.07-.35-.31-.38-1-.67-1.38s-2-1.23-2.2-.72a8.43,8.43,0,0,0,.66,1.92A18.79,18.79,0,0,0,18.57,950c.32.18,1,0,1.05,0,1.49,1.38-1,2.17,0,3.59.72,1,1.53.29,2.34.51s1.2.92,1.65,1.73a5.24,5.24,0,0,1,.5,1.76c0-.39-.44,2.55.08,2-.14.14-.8-.5-.75,0a6.24,6.24,0,0,0,1.13,2.55c.08.12,1.13,1.3,1.15,1.31.28.1,1.12-.36,1.25-.2.77,1-1.59.91.29,1.8.54.25,1.3.13,1.93.5.31.18,1,1.08,1.44,1.08s2.31-1.57,2.42-1.4c0,0-1,1.76-1,1.91-.3,1.09-.37,1.08.43,1.89s1.31.87,1.79,1.76.25,1.46,1.18,1.55,1.16-1.2,1.75-1.67c1-.8.85-.43,2.11-.51.26,0,.58-.49.85-.53s.66.13,1,.1a4.19,4.19,0,0,1,2.39.39c.46.16,0,.43.75.52a14.8,14.8,0,0,0,1.71-.64,3.74,3.74,0,0,1,1.82.21c1.53.42,3.42,2.08,5.15.54.8-.71.34-1.57,1.58-1.45.48,0,.8.43,1.18.68.63.42.13.65,1.09.81.67.11,1.15-.64,1.88-.07s.39.92,1,1.43a2.15,2.15,0,0,0,1.75.38c.33,0,1.16-.49,1.43-.48.73,0,1.36.79,2,1.09a2.5,2.5,0,0,0,2.06.44c.35-.06.46-.4.65-.45s1.37,0,1.41,0c1.62-1-2.12-.87-2.62-1.33-1.32-1.23,2.73-.84,3.45-.8a35.69,35.69,0,0,0,4.6.19c.7-.06,1.57-.85,2.13-.82.82.06,1.29,1.06,2.27,0,.43-.45-.43-1.26.73-1.58.52-.14.59.67,1,.69,1.36.06.38-.08,1.32-.47a5.66,5.66,0,0,1,2.06-.23c1.26,0,2.41.87,2.75-1a12.43,12.43,0,0,0-.36-2.17c-.32-.9-1.13-.85-1.46-1.06a3.18,3.18,0,0,1-1.23-1.1c-.22-.44-.08-1-.38-1.39-.16-.19-.66,0-.9-.17a13.35,13.35,0,0,1-1.21-1.28c-1.13-1.37-.21.2-.75-.72a13.08,13.08,0,0,0-.42-1.55c.65-.67,2.26,1.08,2.67,1.26a16.67,16.67,0,0,1,2.62.91c.71.47,1.64,2.35,2.27,2.47l1.84-1c.51-.29.89-.88,1.46-1.11s1.07.05,1.54-.13a3.5,3.5,0,0,0,1.57-1.43c.5-.91.29-.79.14-1.82-.4-2.75.56-.43,2.1-1.14.59-.26,1.08-1.46,1.57-1.91C97.76,954.54,100,953.14,98.55,953ZM43,959.79c-1.15.92-3.67-1-2.39-2.17C41.71,956.62,44.47,958.61,43,959.79Zm11.83-9.16c0,.15-5.56,1.87-5.77,1.22-.13-.42,2.24-1.54,2.75-1.65S55,949.93,54.83,950.63ZM76,939.85c.88-.68,2.41-.22,1.51.94S75.45,940.3,76,939.85Zm-8-2.69c.46-.46.72-.37,1.18-.77.22-.18.46-1.39,1.17-1.38.1,0,.68,1.1.82,1.25.5.56,1.06.28,1.36,1.11a1.84,1.84,0,0,1-.46,1.93c-1.21.73-1.72-.58-2.51-1.18l-.33-.6c-.28-.32-.51-.3-.67.07C68.76,937.66,67.48,937.79,68.09,937.16Zm1.22,31.23c-1.18.63-.58-1.46-.18-1C69.13,967.36,69.3,968.4,69.31,968.39Zm9.39-12.74c-.26.33-.15,1-.45,1.35a6.5,6.5,0,0,1-1.16.73c-.77.56-1,1.27-2.29,1.15-.41,0-.69-.59-1.11-.7-.24,0-.75.3-1,.31s-.91-.25-1-.26-.48.34-1,.23A13.88,13.88,0,0,1,69.23,957c-.35-.42-.71-.12-.69-.8,0,.5,1.22-1.09,1.12-1,.77-.42,1.68-.29,2.39-.75s1.32-2.35,2-2.63c0,1.13.33,1.54,1.52,1.41.36,0,1.45-.71,1.64-.65.63.17-.24,1.35-.15,1.56s.32.17.45.38S79.3,954.9,78.7,955.65Zm2.51-15.74c-.63.45-2.23,1.79-1.83-.06S82.2,939.2,81.21,939.91Zm3.85.33c-.56-.16.42-1.83.83-1.77.21,0,.28,1.57.3,1.51C86,941,86.24,940.6,85.06,940.24Zm.74,2.92a.59.59,0,0,1-.52,0C84.43,941.82,88.58,942.85,85.8,943.16Zm2.26,9.21c-.21-.15-1.71-.15-1.8-.44s1.25-.52,1.45-.46C88.34,951.64,88.46,952.63,88.06,952.37Zm1.55-1c-.49-.13-.21-1.18,0-1.32C90.4,949.61,89.9,951.41,89.61,951.34Zm.57,2.23a.69.69,0,0,1-.27.6C89.19,954.17,90.31,953.25,90.18,953.57Zm.92-4.48c-.13.61-1.35-.35-1.29-.33C89.7,948.73,91.24,948.39,91.1,949.09Zm-65,1.57c-1-.23-1.41-1.66-.13-1.95S26.79,950.74,26.13,950.66Zm-9.73-5.19c.77,0,.1.58.11.63S15.47,945.48,16.4,945.47Zm-.56-.33a.53.53,0,0,1-.32.5C14.84,945.54,15.86,944.48,15.84,945.14Zm60.31,33.47c-2.3.21-7.43-1.16-5.11-4.5,1.32-1.91.95.16,1.21.94a2.55,2.55,0,0,0,2.2,1.78c.63.07,2.55-.25,2.86-.93s-1-1.87,0-1.95,1.47,2.44,1.26,3A3.78,3.78,0,0,1,76.15,978.61Z"/>
            <path id="terrenus" :style="getStyle('terrenus')" d="M172.16,907.19c0-.06-.48,0-.38.24C172,907.87,172.13,907.43,172.16,907.19Zm4.78-.78c-.75-.85-.47-4.61-2.61-3.92-1,.31-1.6,2-1.66,2.69-.11,1.13.39,1,.63,1.6.07.17.87-.28,1.11-.18s-.12.77.38.83A6.34,6.34,0,0,0,176.94,906.41Zm.56-1.64C177.07,904.8,177.62,904.88,177.5,904.77Zm.72-1.45c-.19-.14-.57.09-.8.09C176.48,903.41,178.92,903.81,178.22,903.32Zm4.86,34.89c-1.17-.38-.08.36-.33.56C182.68,938.83,183.61,938.38,183.08,938.21Zm7.79,10c0-.31-1.09-.14-1,.37C190.15,949.56,191,948.27,190.87,948.25ZM192,946.4a1.39,1.39,0,0,0-.4-.5C191,945.84,191.85,948.05,192,946.4Zm3.89.78c0-.64-3.44.17-2.26,1.42a6.82,6.82,0,0,0,1.71.47C195.93,948.78,195.93,947.85,195.9,947.18Zm6.08,5.91c-.73-.53-.27,0-.74-.08C201.05,953,202.45,953.42,202,953.09Zm1.73.31a5,5,0,0,1-.06-.81c-.24-.28-.8.2-.5.55C203.22,953.23,203.75,953.85,203.71,953.4Zm16.4-4.56a1.11,1.11,0,0,0-.44-.12c.11,0-.27.48-.08.51A.66.66,0,0,0,220.11,948.84Zm2.5-1.4c0-.43-.4.22-.27.23A.31.31,0,0,0,222.61,947.44Zm.13,2.06s-.14-.14-.14-.11V949c-.21-.35-1.35.45-.6.74C222.1,949.77,223.05,950,222.74,949.5Zm5-34.69c-.14-.12-.88-.54-.88,0a4.48,4.48,0,0,1,.07.68C227.11,915.83,227.78,914.85,227.74,914.81Zm-19.6,12.72c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm20.32-15.73a15.19,15.19,0,0,1-2.11-2.85c-.18-.73,0-1.55-.15-2.18a4.48,4.48,0,0,0-1.19-2.4c-.46-.53-1.35-1.92-1.95-2.21-.93-.44-2.17-.5-3.16-.93a6,6,0,0,0-1.79-.7c-.39-.07-2-.57-2.13-1l.15-.12c.09.35-3.07-.57-3.22-.33.21-.33-.3-.37-.66-.38-.13,0,.09.31.16.33l-.15.15c-.25-.18-1-.81-1.18-.64a2.71,2.71,0,0,1-1.48.68,10.55,10.55,0,0,1-1.89.38c-.67,0-.93-.4-1.52-.5s-.92.3-1.39.21c-.78-.15-1-1-1.85-.65-.3.11-1.3,1.49-1.38,1.2-.43,0-.12,1.06-.84.29-.1-.11.81-.64.86-.71s-1.89-1.81-2.43-1.79c-.87,0-.83.82-1.48,1.19-.38.22-1-.32-1.31-.11-1.24.8-.21,2.79-.21,3.72,0,1.59-.84,1.16-1.88,1.26s-1.85.54-3,.77c-.31.06-.23.55-.82.4a6.34,6.34,0,0,1-1.24-1.47,3.67,3.67,0,0,1,.4-1,1.07,1.07,0,0,1,.28.19c1.19-.89-.21-1.06-.48-1.47,0-.08-.78-1.1-.45-1.11l.38.14a.76.76,0,0,0-.31-.94,14.5,14.5,0,0,1-2.2.12c-.4,0-.3-.55-.8,0-.29.33.46.88.36,1.11-.47,1.08-1.89-1.06-2.3-.95-.67.2-.47,1.69-.38,2.2.25,1.39,1.28,2.34-.78,2.41-.58,0-.56-.38-1.42,0a2.92,2.92,0,0,0-1.54,1.93c-.12,1.46,1.05,1.7,1.71,2.23.47.37,1.58,1.46,1.29,2.09-.15.33-1,.09-1.4.26-1.13.47-.92,1.21-2.34.26-.61-.4-1.1-.87-1.69-1.19-.13-.07-.8-.42-.88-.43a5.22,5.22,0,0,1-.67-.27c-.4-.14-.26.5-.54.45s-.63-1.26-1.27-1.4c0,0-1.78.4-1.69.24-.92,1.75-.4,2.23.6,3.94a9.37,9.37,0,0,1,1.08,2.4c0,.51-.46.67-.43,1.1a1.81,1.81,0,0,0,.36.93c.19.29-.45.41-.42.5a.37.37,0,0,1,.18-.29c.17-.42-1,.09-1.05.16-.17.28,0,.57.05.83s.76,1.21.71.84c.14,1-.26.36.54,1.33.09.12.64.17.83.41.38.45-.24,1.82.63,1,.54-.2,0,2.66,0,2.81-.17.58-.12,1-.67,1.5s-.81.2-1.06.33c-.84.4-2.09,1-1.35,2.11.37.55,1.29.36,1.84.36-.68,0,.74,2.61.75,2.68.25,1.21-1.12,2-.86,3.35.09.45.72.57.72,1.11,0,.36-.75.51-.75,1,0,.84.12.77.57,1.23.91.92.68.56,1.58.22s.76-.66,1.74-.8c.63-.09,1.32.22,1.93.14s2.17-.56,2.53-1.18c.47-.82-.25-1.45.46-2.32s2.18-.85,3.1-.63c1.43.34,1.75.6,3.08,0,.93-.44,1.88-.59,2.49-1.35s0-2.3.21-2.48a.14.14,0,0,1,.24.13c.11.11,1.49,2.06,1.47,2,.11.38-.37,3.8-.27,3.75-.07,0-.1.39.13.27,0,0-.4,2,.16,2.05.08,0,.17-.18.31-.08-.06,0-.06.1,0,.13a.82.82,0,0,1-.38,0,1.26,1.26,0,0,0,.14.57.22.22,0,0,0,0-.13c.19-.07.33,1.56.33,1.57s1.7,1,1.19,1.06c.12-.55,2.26,0,1.6.83-.06.07.84.26,1.13.45s.85.78,1,.85c.4.16.38-.38.63-.38.45,0,1.4,1.55,1.06,1.93a1.22,1.22,0,0,1,.44.32s-.57.25-.29.38c.24-.08.9,2.7,1,3.17a2.75,2.75,0,0,0,.41,1.15c.14.2-.05.61.19.74-.19-.1,1.48-.48,1.27-.3-.64-.23,1.08-1.29,1.29-1.41.61-.33,2.5-1,2.74-2.14.66-.42,1.7,1.91,2.65.5.1-.16-.18-2.07.59-1.87.94.24-.06.63,1.22.29.58-.15,1-.89,1.58-1,1.33-.33,2.42.76,3.59-.1.57-.42-.24-1,.85-.95.47,0,.46.07.34.29-.33.6.72.33.82.29.54-.21.33-.61.55-.81,1.26-1.13.81.12,2.39.2,1,0,2.41-1.64,2.52-2.82.07-.89-.91-1.33-1.11-2s.37-1.23.31-1.77c-.12-1-1.44-2-2-2.74s-.61-.15-.76-1.13,0-.76.54-1.58c.42-.63,1.43-2.24,2.41-2.15.65.07.86.93,1.5.81.34-.07.62-.87.67-.9s-.07-2.08,0-1.89a6.86,6.86,0,0,1-.54-1.23c0-.07.5-1.64.87-1.32-.14,0-.12,0,0,0-.11.09-.28-.34-.19-.48s.61-.17.54-.08c.15-.2.26-.58.06-.76.35.31.81-.74.66-1.15s-2.08-1-1.57-1.65c-.34.43-.25,0-.37.08-.46.16.36.79.39.75s-1,.75-.94.74c-.7.24-.43-.91-.38-.83s-.88-.18-.67-.33,1,0,1.12-.07-.68-.2-.46-.75c.15-.37,1.11-.5.91-.92s-.83.11-.76-.55c0-.28.86-.55,1-.77s.6-1.94.84-1.87c-.65-.19-.21.21-.38-.4a2.93,2.93,0,0,1,.08-1.68S228.77,911.7,228.46,911.8Zm-28.65,5a6,6,0,0,1-1.16,2.24c-.55.32-2.42-.57-2.2.26a.22.22,0,0,1-.21,0c-.13.17.59.32.55.53,0-.08-.6.28-.6.28a1,1,0,0,0-.19-.41c-.22,0-.9,1.77-1.24,1.9-.88.34-1-.18-1.41-.82-.08-.12-.32.5-.22.49a.42.42,0,0,1-.27-.25c.16-.4-.74-1-1.17-1.4s-.76.49-.61-.83c0-.47.62-.41.86-1,.15-.37-.2-.92,0-1.42.51-1.46,1-.78,2-.9.45-.06,1.51-.66,1.82-.61s.37.49.65.52,0,.5,0,.55c.19.24.89,0,.81,0s.75.55.83.58c.77.27.07-.14.57-.21a.79.79,0,0,1-.22.19C198.1,916.44,200,916.29,199.81,916.78Zm6.35-1s-1.53-1.5-1.45-.94a.45.45,0,0,0,.16-.31c-.34,0-1.8.45-2,.26s1.86-.64,2-.63a2.36,2.36,0,0,1,1.21.51c-.36-.23.85.93.67.65a2.07,2.07,0,0,1,.44,1.91s.27-.56.11-.49S206.47,916.15,206.16,915.77Zm3.49,10.78c-.41-.18,0,1.06,0,1.15s-.92,1.36-.67,1.53c.06,0,.11,1.65-1,1.56-.67,0-.68-.67-.6-1.3,0-.17-.2.2-.26.12s-.44-1.21-.44-1.21a8.68,8.68,0,0,1-.08-2.7c.08-.27.56-1.16.95-1.19C208.22,924.45,208.78,926.17,209.65,926.55Zm4.84,7.26c-.37.71-1.23-.12-1.34,0C212.8,933.82,215,932.82,214.49,933.81Zm6.1,4.65a3,3,0,0,1-.32.69,5.45,5.45,0,0,1-1.68-1.39c.16-1.29,1.55.3,1.44.19C220.2,938,220.65,938.21,220.59,938.46Zm-12.5-11c-.09,0-.42,0-.3.08S208.24,927.58,208.09,927.5Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Zm0,0c0-.15-.39-.15-.39,0S208.17,927.63,208.14,927.53Z"/>
        </g>
    `,
    computed: {
        active: function() {
            return this.$root.active;
        }
    },
    data() {
        return {
            list: ['genesaris', 'orisia', 'alterion', 'renovatio', 'terrenus']
        }
    },
    methods: {
        getStyle(name) {
            // console.log(`${this.activeName} : ${name}`)
            var style = '';
            style += 'stroke-miterlimit: 10;'
            if (this.activeName == name) {
                style += 'fill: ' + this.$root.getCSS('color-water-hover') + ';';
                style += 'stroke: ' + this.$root.getCSS('color-water-hover') + ';';
                style += 'stroke-width: 0px;'
            } else {
                style += 'fill: ' + this.$root.getCSS('color-bg') + ';';
                style += 'stroke: ' + this.$root.getCSS('color-bg') + ';';
                style += 'stroke-width: .2px;'
            }
            return style;
        }
    },
    computed: {
        activeName: function () {
            var which = this.$root.active;
            return this.list[which];
        },
    },
})
    
Vue.component('grid', {
    props: {
        size: String,
        rowcol: String,
    },
    computed: {
        realsize: function() {
            var self = this;
            return Number(self.size);
        },
        realrowcol: function() {
            var self = this;
            return Number(self.rowcol);
        },
        gridNum: function() {
            return (this.realrowcol - 1) * 2;
        }
    },
    template: `
        <g class="map-bg-grid">
            <rect class="map-bg-gridline" x="0" y="0" :width="realsize" :height="realsize"/>
            <line 
                v-for="index in gridNum"
                class="map-bg-gridline"
                :x1="index < realrowcol ? 0 : countdown(index - realrowcol + 1, realsize)"
                :y1="index < realrowcol ? countdown(index - realrowcol, realsize) : 0"
                :x2="index < realrowcol ? realsize : countdown(index - realrowcol + 1, realsize)"
                :y2="index < realrowcol ? countdown(index - realrowcol, realsize) : realsize"/>
        </g>
    `,
    methods: {
        countdown(index, total) {
            return (index > 0) ? total - ((index) * (total / this.realrowcol)) : total - ((index + this.realrowcol) * (total / this.realrowcol));
        }
    },
    mounted() {
        console.log('Hello grid')
    }
})

Vue.component('terrenus', {
    props: {
        model: Object,
    },
    template: `
        <g id="terrenus">
            <path :class="getBoundsClass('body')" :style="getBoundsStyle('body')" @mouseover="hoverOn('body')" @mouseout="hoverOff('body')" d="M922.48,305.85a12,12,0,0,0,.12-3.16c0-1.4.19-4.34.3-5.24v0c1-8.4-5.8-13.24-12.22-17.12a43.35,43.35,0,0,0-8.3-3.63,15.38,15.38,0,0,0-.4-3c-1.49-6.28-5.75-9.87-8.57-12.25-.49-.41-1.19-1-1.57-1.37A19.17,19.17,0,0,1,891,249a16.14,16.14,0,0,0,3.24-11.26,15.16,15.16,0,0,0-4.29-9.61c1.07-3.62,2.17-8.79.26-14.48-1.83-5.43-5.77-8.89-8.37-11.19l-.94-.82c-.23-1.38-.5-3.21-.62-4.07-.47-3.23-.91-6.27-4-9.29a17.34,17.34,0,0,0-8.52-4.47c-.56-1-1.24-2.23-2.2-3.62a25.71,25.71,0,0,0-5.42-5.47l-.57-.45-.06-.14a19.57,19.57,0,0,0-4.28-6.16,29,29,0,0,0-7-4.47c-.61-.3-1.5-.74-1.86-1l0,0a12.15,12.15,0,0,1-2.11-2.21A12.42,12.42,0,0,0,840,153a16.29,16.29,0,0,0-13.53-4l-.16,0-2.52-.14a35.15,35.15,0,0,1-6.1-.63,41.62,41.62,0,0,1-5.85-3c-1.16-.66-2.36-1.35-3.53-2-.14-.09-.53-.39-.82-.61a23.72,23.72,0,0,0-7.84-4.28,20,20,0,0,0-6.49-.76l-.83-.27a16.45,16.45,0,0,0-1.61-2.26c-4.79-5.79-9.65-8-16.1-7.34a15.16,15.16,0,0,0-4.15-1.64c-1.43-.33-2.78-.57-4.09-.8-1.15-.21-2.23-.4-3.15-.62a62,62,0,0,0-10.18-1.31,48.37,48.37,0,0,1-6.79-.77A22,22,0,0,0,744,118a17.14,17.14,0,0,0-4.87-4.8c-.23-.16-.47-.3-.71-.44a16.41,16.41,0,0,0-8.74-3.7,21.6,21.6,0,0,0-4.71-.39,24,24,0,0,0-8.85,2.46l-.82.36a25.55,25.55,0,0,1-4.77-2.14c-1.36-.71-2.9-1.51-4.58-2.26a36.64,36.64,0,0,0-13.15-3.44c-4-3.52-8.86-4-12.3-3.9a12.34,12.34,0,0,0-9.17-.72,16,16,0,0,0-2.5-.64A28.64,28.64,0,0,0,662,98c-3-1.47-8.57-2.9-14.82,2.26-.89.72-1.8,1.57-2.76,2.46l-.2,0a25.36,25.36,0,0,0-7.5,2.85c-.39.2-1,.49-1.29.65l-1.43-.35c-10.15-2.39-23.49,3.07-27.34,4.8-1.74.78-3.22,1.54-4.4,2.15-.59.3-1.26.64-1.77.88l-.59-.23c-2.19-1-2.19-1-3.9-3-6.6-7.71-13.44-9.32-22.85-5.38a41,41,0,0,0-4.81,2.54l-.56.33-.68-.49c-.91-.65-1.74-1.24-2.42-1.68-1-.66-1.91-1.3-2.76-1.9-5.35-3.76-12-8.44-24.53-6.62-4.8.7-10.55,4-12.57,5.56a21,21,0,0,0-4.44,4.59l-.39-.24a22.12,22.12,0,0,0-7.34-2.57l-.49-.1a20.39,20.39,0,0,1-1.61-2.23l-.62-.92a12.9,12.9,0,0,0-1.29-5.1,22,22,0,0,0-6-7.54c-4.57-3.48-10.61-4.16-15.93-4.77-1-.11-2.11-.24-2.64-.33-10.27-1.84-18.1,1.43-23.27,9.71-1,1.61-1.84,3.27-2.65,4.87-.41.82-1,1.93-1.52,2.9a19.12,19.12,0,0,0-3.86-.62c-1.15-.06-2.13-.08-3.06-.09a15.69,15.69,0,0,1-2.77-.17l-.78-.14c-10.34-1.85-17.38,1.67-21,10.45a20.76,20.76,0,0,0-1.26,7.79V119l-.21.38c-.33.63-.78,1.49-1.28,2.62a52.51,52.51,0,0,0-4.37,18.63c0,.62-.12,1.22-.19,1.8-.45,3.75-1.2,10,2.93,16.74a44.09,44.09,0,0,0,3.29,4.54l.4.51a25.89,25.89,0,0,0-5.46,10.22c-1.4-.35-2.88-.78-4.39-1.21-2.36-.69-4.77-1.39-7.31-1.92a13.92,13.92,0,0,0-10.86-2c-5.88,1.4-8.76,5.93-10.79,9.64a12.59,12.59,0,0,0-6.67,1.25l-.84-.11c-3.65-.5-13.31-1.81-20.13,5.06a42.7,42.7,0,0,0-5.61-5.93c4.61-3,6.57-9.11,8.14-14.54a12.84,12.84,0,0,0,4.11-7c1.35-6-1.88-10.61-2.94-12.12a15.63,15.63,0,0,0-12.07-6.79c-.33-.13-.61-.24-.86-.36,1.43-3.35,1.27-7,1.13-10.34-.08-1.79-.18-3.35-.37-4.74a13.76,13.76,0,0,0-5.39-14.68,15.38,15.38,0,0,0-18.7-.11l-.22.17a20.63,20.63,0,0,0-4.7,2.3c-.6.39-1.13.75-1.62,1.09-.49-.19-1.09-.44-1.58-.65a31.63,31.63,0,0,0-9.56-2.81l-.56-.05a13.9,13.9,0,0,0-10.5-5.29c-7.34-.27-11.77,5.06-13.91,7.63l-.12.15-.83.63a16.64,16.64,0,0,0-4.32,4.59c-2.35-2.59-5.95-4.88-11.74-5.74-13.59-2-18.39,7.7-20.19,11.37l-.06.11c-.18.36-.33.71-.46,1a12.49,12.49,0,0,0-2.29,16.13.31.31,0,0,1,0,.1,16.25,16.25,0,0,0-.8,7.38,13.86,13.86,0,0,0,1.38,4.53,29,29,0,0,0-1.5,3.43c-3.94,10.74,2.4,18.23,6.34,22-.46.15-.9.32-1.32.5-5.54-5-11.68-6.09-18.29-3.27a41.89,41.89,0,0,0-6.73,4c-.58.39-1.37.92-1.67,1.1a48.08,48.08,0,0,0-9.3,7.18c-1.09,1.06-2.09,2.1-3.06,3.1-1.46,1.52-2.86,3-4.2,4.1l-.48.15a24.39,24.39,0,0,0-6.53,2.74c-7.65,4.73-13.66,15.15-7.55,30.2a46.61,46.61,0,0,0,2.07,4.38,5.77,5.77,0,0,1,.89,2.13,11,11,0,0,0,.32,1.37,13.72,13.72,0,0,0,.22,5.2,18.82,18.82,0,0,0,5.68,9.79,13.85,13.85,0,0,0,3.13,5.55,15.13,15.13,0,0,0,6.07,3.94,15.43,15.43,0,0,0,12.88,5.93,44.6,44.6,0,0,0,5,5.37c-5.54,1.69-9,6.21-11.2,9-.27.34-.5.66-.68.87a56,56,0,0,0-4.34,5.67c-.27.39-.58.85-.87,1.25-2.83-.33-5.69-2.44-10.2-5.9l-1-.8c-1.5-1.14-3-2.09-4.22-2.93a26.47,26.47,0,0,1-3.53-2.55c-.28-.37-.82-1.24-1.19-1.83a28,28,0,0,0-6.35-7.74,23,23,0,0,0-6.86-3.49,13.77,13.77,0,0,0-2.63-1.47,12.92,12.92,0,0,0-3.29-.91,13.68,13.68,0,0,0-5.11-1.39,13.22,13.22,0,0,0-2.44,0,23,23,0,0,0-7-4.42,20.35,20.35,0,0,0-5.15-1.29A14,14,0,0,0,139,248.88a40.09,40.09,0,0,0-5.81-6.92c-5.32-4.94-15.11-8.73-24-5.38a17.46,17.46,0,0,0-6.69,4.65h0c-3.18-1.36-12.86-5.51-20.56,2.52a17.26,17.26,0,0,0-3.54,5.42,15.37,15.37,0,0,0-3.22,2c-4.55,3.7-5.59,8.89-6.09,11.39l-.11.53c-2,7.93-.5,13.13,2.66,18.9l-.09.32c-1.18,4.31-2.07,9.47,2.39,16.18a12.81,12.81,0,0,0,4.52,4.13,18.11,18.11,0,0,0,3.08,5.52,19.64,19.64,0,0,0,5.66,4.5c.2.82.43,1.53.61,2.07v0a36.9,36.9,0,0,0,4.05,10.75l.43.84c1,2,2.09,3.9,3.1,5.7a70.2,70.2,0,0,1,3.81,7.37,67.46,67.46,0,0,0,3.17,6.26c.34.62.72,1.29,1.06,1.94-2.16,2.87-6.37,8.83-6.15,16.22-.63.15-1.13.3-1.48.42-2.29.85-8.36,3.12-11.13,9.87a14.79,14.79,0,0,0-1.2,5.84,16.48,16.48,0,0,0-1.54,12.55,12.4,12.4,0,0,0,.86,2.24,11.8,11.8,0,0,0,.68,5.1c-.92,7,4.12,11.55,5.93,13.18a12.15,12.15,0,0,0,1,.78,15.37,15.37,0,0,0,1.74,7.42c2.21,4.26,5.76,6.32,8.11,7.68l1.13.67c.73.44,1.81,1.23,2.85,2a41.57,41.57,0,0,0,8.65,5.24,18.67,18.67,0,0,0,2,.91c0,.5,0,1,0,1.54,0,.37,0,.91,0,1.55,0,6.39,0,11.9,4.08,16.24a16.59,16.59,0,0,0,7.16,4.42,26.43,26.43,0,0,0-3.69,12.86,20.89,20.89,0,0,0,1.51,7.5,19,19,0,0,0-.79,10.05c-1,1.34-2.75,3.31-3.92,4.6-1,1-1.87,2.06-2.71,3-.32.38-.53.6-.64.71l-.64.32c-.27-.09-.55-.16-.83-.23a14.13,14.13,0,0,0-10.5,1.24c-.32.12-.63.24-.92.37a15.21,15.21,0,0,0-3.7.13c-.25,0-.45,0-.62.07A16.91,16.91,0,0,0,89.1,506c-8.14,6.32-11.71,22.89-11.86,23.6-.08.41-.18.82-.27,1.23-1,4.78-3,13.68,3.85,20.21A15.46,15.46,0,0,0,87,554.65a14.78,14.78,0,0,0,6.12,5,12.33,12.33,0,0,0,7.64.87l.28.15c.21.11.39.22.55.32a20.6,20.6,0,0,0,3.75,1.89A23.22,23.22,0,0,0,106.7,565l.24.34c.11.36.27,1,.41,1.58a21.46,21.46,0,0,0-1,8.18c.43,4.59,3,7.75,5.52,10.8l.52.63a12.44,12.44,0,0,0,2.54,6.89,14.5,14.5,0,0,0,4.11,3.73,14.1,14.1,0,0,0-.83,1.24A47.07,47.07,0,0,1,115,602.9a53.73,53.73,0,0,0-6.52,10c-2.37,4.9-3.63,10.84-4.37,14.89-1.81,9.8,1,14.32,4.92,19.22l.27.34c.85,1.06,1.86,2.18,2.93,3.36l0,0c-3.63,3.59-8.75,9-9.69,18.29a24.38,24.38,0,0,0,5.19,17.51,75,75,0,0,0,5.78,5.64,12.48,12.48,0,0,0,5.37,2.67c.45.59,1,1.41,1.45,2,2,2.83,4.4,6.34,8.5,8.84,3.38,2,10.4,4.8,19.47.08a24.21,24.21,0,0,0,10-10.23c.32-.55.75-1.3,1-1.55,2.11-1.75,6.92-4.47,8.71-4.91a107.63,107.63,0,0,1,13.35-.49h2.81A68.13,68.13,0,0,1,196.57,690a14.92,14.92,0,0,0,8.48,1.33c.07,0,8.45-1.42,12.38-5.37l.38-.39a15.9,15.9,0,0,0,2.52.56,14.25,14.25,0,0,0,4.37-.12,17.58,17.58,0,0,0,.18,8,17.16,17.16,0,0,0,5.84,8.89,20.12,20.12,0,0,0,5.37,4.78,13.15,13.15,0,0,0,7.86,2.08c10.38-.57,15.12-12.1,15.78-17.59a14.42,14.42,0,0,0-4.48-12.62,14.65,14.65,0,0,0-10.16-7.26,19,19,0,0,0,7.59-7.7c2.42-4.77,1.54-9.51,1-12.34-.08-.41-.2-1-.22-1.24,0-.52,0-1-.07-1.54a27.09,27.09,0,0,0-2.27-10.94l-.17-.34c.78-.79,1.56-1.54,2.2-2.1a23.42,23.42,0,0,0,8.81-1.54,28.71,28.71,0,0,0,10.27-7.63c.3-.32.66-.71,1-1,.6.23,1.48.63,2.18,1a35.88,35.88,0,0,0,8.53,3,54.24,54.24,0,0,0,5.77.74c2.27.21,2.59.27,3.39.67,6.52,3.24,17.43,8.66,29,5.67a18.26,18.26,0,0,0,5.86-2.88l.85-.22a28.88,28.88,0,0,0,8-3.1c2.71-1.6,5.56-3,8.58-4.52l3.66-1.83,2.31-1.2c3.38-1.77,5-2.57,7.24-2.9.59-.09,1.41-.15,2.26-.21,4.42-.33,11.81-.87,17.55-7.39a22.94,22.94,0,0,0,4.24-8c.13-.36.3-.86.44-1.2.35-.4.76-.82,1.21-1.3s.79-.81,1.23-1.29a12.79,12.79,0,0,0,1.07,5.65,13.45,13.45,0,0,0,.43,1.69q-.08.75-.09,1.59c-2,4-4,9.46-3.5,14.68-.17.4-.26.67-.36,1a22.33,22.33,0,0,0-1.16,8.76,16.1,16.1,0,0,1,0,1.71c0,.52-.08,1.07-.12,1.61a35.48,35.48,0,0,0-.11,6.7,17,17,0,0,0,.5,2.57,12.64,12.64,0,0,0-.05,2,13.41,13.41,0,0,0,.22,4.82,13,13,0,0,0,2.32,4.86,12.68,12.68,0,0,0-2.13,3A12.49,12.49,0,0,0,383.88,675a68.84,68.84,0,0,1,2.24,6.68s0,.1.05.15c-.26,3.14.53,6.83,3.35,10.93a12.74,12.74,0,0,0,1,2.73,13.63,13.63,0,0,0,2,8,13,13,0,0,0,2.49,3,12.51,12.51,0,0,0,.29,10.84,14,14,0,0,0,2,2.88,18.9,18.9,0,0,0,4.69,4,12.55,12.55,0,0,0,5,1.74,13.19,13.19,0,0,0,2.8,0A12.6,12.6,0,0,0,417,736.49,14.74,14.74,0,0,0,430.53,740a13.68,13.68,0,0,0,3.65-1.42c.66,5.15,2.59,8.35,4.92,10.33a13.12,13.12,0,0,0,2,1.73c4,2.85,8.43,3.54,11.35,4l.94.15c3.64.61,6.53,2.18,11.24,5.26.7.46,1.37.86,2,1.24l.28.17a16.87,16.87,0,0,0,20.83,8.79,12.54,12.54,0,0,0,4.12,5.94,13.18,13.18,0,0,0-.18,1.82c0,.29,0,.62,0,1a12.71,12.71,0,0,0,.66,5.69,12.55,12.55,0,0,0,1.51,2.91,20.51,20.51,0,0,0,.4,6.7c.13.42.28.84.45,1.25a25.09,25.09,0,0,0,1.9,8.12c.17.4.31.82.46,1.23a24.22,24.22,0,0,0,5.38,9.32c.16,1,.32,2,.38,2.52a12.81,12.81,0,0,0,3.51,8.46,19.06,19.06,0,0,0,.74,2.52,17.8,17.8,0,0,0,0,3.61l0,.12s0,0,0,.08v0a12.41,12.41,0,0,0,1.69,8.35l.22.41a12.55,12.55,0,0,0,1.95,9.75c.2.37.39.73.59,1.07a12.75,12.75,0,0,0-.11,1.63,12.46,12.46,0,0,0,3.66,8.84c.32.31.64.61,1,.88,0,.13.07.27.1.39a14,14,0,0,0,5.22,11.84,12.75,12.75,0,0,0,7.82,2.66,13.38,13.38,0,0,0,8.31-2.93c.58-.38,2.16-1.16,3.22-1.69l1.41-.7a16.77,16.77,0,0,0,7.56.64A12.5,12.5,0,0,0,560.34,859a12.43,12.43,0,0,0,4.34-3.83l1.61-1.06a12.57,12.57,0,0,0,7.62-1.29,17.56,17.56,0,0,0,2.72-.62,20.41,20.41,0,0,0,8.43-4.5c.25-.22.56-.48,1-.8.88-.71,1.69-1.44,2.44-2.16a13.25,13.25,0,0,0,3.94-2,12.42,12.42,0,0,0,3.31-3.62l1.35-.71a41.26,41.26,0,0,0,8-5.06,17.69,17.69,0,0,0,4-5.41c.1-.19.23-.41.37-.66a13,13,0,0,0,2.13-1.52c.7.28,1.35.52,2,.72l.14.13a225.76,225.76,0,0,0,12.88,9.31,16.68,16.68,0,0,0,12.28-2.69l1.05-.21A42.33,42.33,0,0,0,644.3,832l.77-.23a20.4,20.4,0,0,0,8.29-4.17,15.08,15.08,0,0,0,4.74-8.45,12.4,12.4,0,0,0,2.29-6.1.07.07,0,0,0,0,0,22.32,22.32,0,0,0,.09-2.53,12.52,12.52,0,0,0,3.85-.52,32.91,32.91,0,0,0,8.29-3.12c.23-.11.46-.22.69-.35l0,0c2.54-1.42,4.73-2.86,6.85-4.25,1.65-1.07,3.21-2.09,4.73-3a85.52,85.52,0,0,0,8.68-5.87c3.87-2.88,6.19-4.53,8.81-5.06l.12,0a16.16,16.16,0,0,1,3.08,1c6.55,2.55,12.56,4.74,19.82,5.8a31.93,31.93,0,0,0,9.43-.43h.25c3.39-.14,7.6-.3,12.55-3.89a23.87,23.87,0,0,0,3.11-2.7c.88-.25,1.91-.54,2.86-.85a15.9,15.9,0,0,0,7.73-4.88,16.87,16.87,0,0,0,5.92,2.77c7.49,2.53,14.39-2.69,19.11-6.26l.1-.07c.19-.13.36-.23.51-.32a18.42,18.42,0,0,0,5.82-5.15,14.66,14.66,0,0,0,3.93-5.45,12.33,12.33,0,0,0,.73-2.48,12.59,12.59,0,0,0,6.57.81c.49.33,1,.67,1.59,1,2.31,1.36,5.45,3.33,7.47,4.68,1.71,1.14,7.13,4.24,11.57,4.81,2.1.27,4.94.23,10.13-2.08.7-.32,1.69-.76,2.77-1.38.36-.1.72-.22,1.08-.35l.09,0a60.8,60.8,0,0,0,9.85-13.62,25.21,25.21,0,0,0,4.06-5.43,22,22,0,0,0,1.95-5.78c0-.11.05-.23.08-.36s.31-.39.46-.6a11.74,11.74,0,0,0,1.59-1.83l.17-.24a15,15,0,0,0,2-4.72c.11-.36.23-.79.34-1.14l.09-.21c.27-.59.7-1.54,1-2s.89-.91,1.31-1.32c2.76-2.71,6.53-6.42,7.52-12.11.84-4.9-.74-9.19-1.79-12,0-.13-.1-.29-.16-.44a23.91,23.91,0,0,0,0-4.48,22.23,22.23,0,0,0-6.19-13c-.24-.27-.5-.56-.76-.87a41.31,41.31,0,0,0-6.78-6.31l-.38-.29a60.36,60.36,0,0,1,2.91-11.4,13.1,13.1,0,0,0,3-8.82,16.78,16.78,0,0,0-4.14-10.71,33.48,33.48,0,0,0-15.33-20.28c-1.07-.7-2.09-1.25-2.95-1.71l-.76-.41a12.14,12.14,0,0,0-1.44-.84l-.78-1.45a21.08,21.08,0,0,1-2.21-5c-2.48-10.59-9.13-13.45-13.53-14.32a15.68,15.68,0,0,0,.09-5.8,15.24,15.24,0,0,0-1.37-4.2,25.87,25.87,0,0,0,7.71-9.16c.31-.66.53-1.08.68-1.35a13.56,13.56,0,0,0,1.67-8.08l.62-.28a44.66,44.66,0,0,0,7.94-4.32,33.71,33.71,0,0,0,4.44-4c.54-.55,1.36-1.39,1.62-1.59,1.67-1.1,3.35-2.21,4.88-3.41a16,16,0,0,0,3.58,2.14,15.31,15.31,0,0,0,3.43,1c2.53,3.93,6.79,9.23,14.36,9.1,5.35-.1,9.1-3.1,14.56-9,4.2-4.51,6.41-7.58,7.4-10.55a15,15,0,0,0,3.55-5.75,14,14,0,0,0,.13-9.09c1.74-3.21,2.55-7.84.51-14.39a11.83,11.83,0,0,0-.4-1.32,12.54,12.54,0,0,0-1.59-16.9c-1-1.15-3.4-4-4.23-5l0,0,0,0-.07-.09-.84-1.19c-.42-.58-.66-.91-.82-1.17l.83-1.1a12.45,12.45,0,0,0,2.37-5.3c0-.26.1-.52.13-.78a13.07,13.07,0,0,0,4.47-2.72,12.45,12.45,0,0,0,4.29-7.05,16,16,0,0,0,7.4-10.8,12.84,12.84,0,0,0,.23-1.6c.88-.71,1.61-1.41,2.18-2,4.87-4.65,6.56-12.17,7-14.37a27.2,27.2,0,0,0-.58-9.4,15.24,15.24,0,0,0-.45-4c-2.2-8.83-10.8-12.69-19.11-16.42l-1.38-.62a13.43,13.43,0,0,0-8.93-15.77,15.67,15.67,0,0,0-1-11.57,14.74,14.74,0,0,0-1.63-2.63c5.44-4.45,7.51-9.84,6.18-16.06.88-.93,2.36-2.2,3.34-3a58.21,58.21,0,0,0,4.75-4.38,14.92,14.92,0,0,0,5.68-10.06,31.54,31.54,0,0,0,.43-3.16,45,45,0,0,0,5.65-6.45,36.82,36.82,0,0,0,2.4-3.65c4.1-7.27,1.37-13.52-2.21-16.68-.34-.29-.63-.59-.91-.87a27.57,27.57,0,0,0-3.42-3l.74-.68c1.66-1.56,3.37-3,5.17-4.57,1.56-1.35,3.19-2.74,4.8-4.21.18-.16.42-.35.67-.55C917.87,320.69,925.16,314.78,922.48,305.85ZM241.62,696.41l.72-.17C242.55,697.12,242.15,696.93,241.62,696.41Z"/>
            <path :class="getAreaClass('body')" :style="getAreaStyle('body')" @mouseover="hoverOn('body')" @mouseout="hoverOff('body')" d="M612.92,532.52c.45,1.63-4.13,1.59-5.19,1.23C606,531.31,611.9,529.28,612.92,532.52ZM910.48,296c.1-.85-5.17-4.32-6.26-5-2.93-1.77-7.21-2.74-10.36-4.23-1.6-.76-5.34-1.82-5.81-3.77-.32-1.34,2.28-4.28,1.76-6.44-1-4.39-7.29-6.35-9.29-11.15-2.94-7.06-3.18-13.81-1.3-21.27.64-2.51,2.74-2.31,2.5-5.53-.22-3-4.59-3.79-5-4.84-2-4.82,3.48-10.63,1.61-16.17-1.42-4.23-7.37-6.84-9-10.58-.76-1.76-1.66-9.71-1.8-9.85-1.76-1.72-4.69-1.16-6.09-2-3.5-2.07-4-4.81-6.19-7.95-1.3-1.89-4.39-3.57-5.75-5.42-.85-1.16-1.87-3.88-2.69-4.63-2.23-2-6-3-8.57-5.18a23.56,23.56,0,0,1-5.58-6.63,11.83,11.83,0,0,1-.77-2.94c-2.41-2.08-3.2-.8-6.17-1-3.87-.27-8.57-.25-12-1.43-3.83-1.31-7.71-3.9-11.22-5.74-2.42-1.28-3.73-3.14-6.43-4-1.62-.5-3.47,0-5.13-.38a38.45,38.45,0,0,1-6.79-2.48c-2.82-1.81-1.21-2.28-3-4.41-3.93-4.74-4.06-2.35-9.52-2.55-1.89-.07-2.21-1.83-3.93-2.23-2.35-.55-4.91-.86-7.34-1.45-7.43-1.79-17.52.05-23.49-5.38-2.32-2.1-1.75-5.94-4.57-7.78.93.6-9.69.57-2.58-1.58,1.18-.36-3.84-.94-4.1-.93-3.05.16-5.93,2.77-9.36,2.89-5.75.22-10.26-3.25-15.38-5.53a24.81,24.81,0,0,0-13-2.4c.41,0-6,2-5.21.63.37-.58,2.49-1.38,2.47-2.36-.08-3.17-6.45-1.82-7.37-2-3.29-.48-1.63-3-5.22.07.13-.11,2.55,3.34,1.76,3.05,2.81,1.06-1.64,1.68-1.32,2.59-.83-2.38-3.44-6.94-6.34-7.44-4.27-.75-7.4.5-10.52.5-.61,0,.67-1.74.32-2-.76-.58-8.18,8-9.71,7.24a2.09,2.09,0,0,0-.44-1.33c-1.8.3-4.72,2.28-6.81,3-4.19,1.47-4,1-8.34,0-5.34-1.26-14.75,2-19.35,4-7.21,3.24-9.31,6.11-16.83,2.88a18.72,18.72,0,0,1-8.46-6.3c-3.1-3.63-4-3.85-8.51-2-3.22,1.34-8.15,5.53-11.8,4.74-2.29-.49-6.21-3.71-8.35-5.11-6.59-4.3-9.47-8-18.65-6.61a22.33,22.33,0,0,0-6.9,3.22c-2,1.46-3,4.08-4.75,6.79C526,122.24,520.72,130,517.32,130a1.42,1.42,0,0,1-.32-1.42c.1,1-2.61,2.9-3,4a17.13,17.13,0,0,1-1.11,1.43c-.48.86,1,2.22.74,2.43-3.25,2.75-7.24-6.54-9-4.18.57-.38,1.16-.74,1.75-1.09-.77-2.06.65-.64,2.64-2.25,0,0,2.25-2.28,2.65-2-4.56-3.06,4.4-3.46,5.6-4.69,0,0-3.41-4-3.62-4.11-2-1.21-5.13-1-7.5-2.4-3.24-2-4.48-4.16-6.57-7.21-.76-1.11-2.05-1.92-2.49-3.23-.29-.9.58-2.89.35-3.36a9.51,9.51,0,0,0-2.32-3.06c-2.51-1.92-9.79-2.14-13.19-2.75-4.71-.84-7.81-.24-10.48,4-2.95,4.71-5.39,13.12-11.84,14.56-2.46.55-5-1.43-7.46-1.56a53.93,53.93,0,0,1-7.24-.42c-3.73-.63-6.37-1.5-8.08,2.71-.57,1.38-.13,4.63-.59,6.36-.65,2.48-1.38,3.2-2.3,5.29a39.74,39.74,0,0,0-3.34,14.51c-.29,4-1.41,7.3.92,11.09,1.9,3.09,4.72,5.44,6.06,9.08,2.84,7.66-6.31,10.33-6.54,17.26,0,1.67,1.61,2.76,1.68,3.94.26,4.27-4.9,4.9-8.6,4.84-7.8-.11-15.26-3.93-22.33-4.7.12,0-1.3-1.83-2.37-1.57-1.51.35-3.7,5.83-4.69,6.84-1.13,1.16-4,4.17-5.37,4.5.2-.05-7.27,1.11-4.73-1.42-4.57,4.54-15.31-4-19.38,5.25-1.26,2.87.67,2.76-2,4.82-2.82,2.2-3.75.54-6.32.16-6.57-1-5.83-1.86-8-7.53s-20.29-15.12-11.61-20.57c.24-.15,2.16,2.13,3.1.45s-1.18-1.94-1-3.71c.11-.95.67-3.83,1.47-4.23,3.38-1.72,2.05,2.54,4.7,2.57,1.27,0,3.68-10.31,4.13-11.07,1.58-2.64,4.3-1.26,1.83-4.77-1.57-2.23-3.19-1.13-5-1.82a25.45,25.45,0,0,1-7.25-3.79c-.95-.7-5-2.82-5.33-3.48-1-1.71,1.49-6.08,1.18-6.4-1.72-1.93-3.82-2.71-3.11-4.87,1.66-5,3.95,2.42,5.32,1.12.49-.47.09-9.3-.4-9.93a1.77,1.77,0,0,0-.9.41c-.32-.27.66-3.56.34-3.59,3.23.29-.66-3.9-3.26-1.92a1.5,1.5,0,0,1,.15,1.36c-1.7.33-3.58.17-5.81,1.63-3.25,2.13-4.14,3.39-8,3.38-4.7,0-8.34-3.31-12.87-3.77-2.48-.26-4.36,0-6.3-1-1.37-.68-2-4.27-3.93-4.34-1.71-.06-4.06,3.65-5.07,4.47-3.62,3-3.15,1.79-3,4.85a9.31,9.31,0,0,1,1.8.73c-.09,1.15-.19,2.31-.29,3.46a30.29,30.29,0,0,0,1.54,3.85,1.87,1.87,0,0,0,.3,2.7,1.82,1.82,0,0,1,2.07.1c.4,4.64,1.11-.63,0,2.1a71.61,71.61,0,0,1-6.66,5.08c-2.64.16-6.4-5.29-8.33-7.26a48.33,48.33,0,0,0-3.73-3.28c-2.37-1.91-1.91-.59-3.75-2.88-2.65-3.31-1-5.87-7.15-6.79-4.61-.69-5.49,1.21-7.19,4.64-.52,1.07-.07,6-3.43,4.93,3.21,1.07,2,4.82,1.88,8.7-.05,1.44-1,2.43-.83,3.91s1.88,1.85,2.11,3c1.31,6.28-.92,5.52-2.89,10.89-2.29,6.25,4.74,8.86,8.46,13.8,3.08,4.07,6.75,13.3-.34,16.44-2.94,1.3-6.34-1.74-9.48-.74-2.51.8-3,3.74-5.68,4.07-5.69.71-6.81-9.84-13.06-7.17-2,.83-5.18,3.28-6.94,4.32a35.5,35.5,0,0,0-6.94,5.37c-2.77,2.71-5.3,5.66-8.3,8.13s-5.39,2-8.12,3.64c-5.51,3.41-4.55,9.91-2.54,14.88,1.47,3.62,3,5,3.69,9,.07.4,1.28,1.74,1.32,2.24.11,1.23-1.17,2.61-.93,3.61.79,3.32,2.56,3.49,4.44,6.15.54.76,1,3.17,1.32,3.53,1.2,1.28,2.7.57,4.12,1.83,1,.91,3.12,3.83,4.42,4.05,3.45.59,4.23-4.07,8.33-.59,1.52,1.29,1.07,2.74,1.91,4.12,2.45,4,6.51,6.34,9.17,10.09,3,4.19,8.86,12.21,7.38,17.33-1.66,5.74-6.62,5.91-10.89,3-1.68-1.13-2.4-4.59-5.46-4.21-2.44.3-5.12,4.67-6.65,6.38-4.88,5.47-5.83,11-13.35,11.14-8.15.18-13.9-4.62-20-9.31-3.06-2.34-6.45-4-9.17-6.75-2.17-2.2-3.93-6.58-6.25-8.41a15.84,15.84,0,0,0-5.47-2.07c.3.05-.87-1.08-1.12-1.18-1.24-.52-1.1,1.93-2.55,1.31,0,0-.66-2.59-1.87-2.67s-2.21,1.79-2.78,1.75c-4.35-.28-5.93-5.21-10.41-7-2.31-.92-4.37-.32-6.46-1-1.8-.59-1.36-3.51-4.29-2.6s-1.77,5.92-4.26,7.86c-.69.54-3.35-8.25-3.69-9a31.11,31.11,0,0,0-6.47-9.24c-2.7-2.49-7.58-4.17-11.13-2.84-2,.77-3.2,3.56-4.87,4.68-2.85,1.89-3.79,1.73-7.41,1.06s-7.81-4.29-10.36-1.63c-3.35,3.5,2.39,4.36-1.33,7.37-1.65,1.34-4.85-.29-6.57,1.1-1.35,1.1-1.56,3.71-2,5.31-1,4.11-.52,6.11,1.58,9.93,2.23,4,2.37,3.68,1.39,7.76-.91,3.79-1.75,4.62.29,7.68.24.36,2.9.93,3.4,1.38s.6,1.56,1,2.17c.92,1.28,1.5,4,2.27,4.92,2.5,2.92,8.41,3.13,9.47,6.6.33,1.09-1.36,1.73-1.27,2.6s.74,2.26.84,3.05c.35,2.8,2,5.75,3.35,8.39,2.42,4.75,5.21,8.92,7.3,13.89,1.75,4.16,5.05,8.61,6.16,12.93,1.2,4.66-.8,4.14-3.15,7.22-2.52,3.31-4.82,6.94-3.64,10.55.39,1.21,2.19,2.3,2.37,3.15.25,1.11-.75,3.38-.67,3.68.28,1.06.6,2.23.86,3.27,0-.17,1.74-.75,2,.25.79,2.59-5.87,7.33-6,6.65-.4-1.88,3.18-3.49,3.11-5-.12-2.56-10-1.92-11.64-1.31s-3.27,1.3-3.93,2.9c-.93,2.25.73-.17,1.41,2.07.38,1.26-4.68,4.64-3.69,8.17.19.65,2.89,3.2,3.27,3.6a26.11,26.11,0,0,0-2,3c.14.33,2.42-.08,2.22,1-.1.6-1.12.61-1.06,1.31.34,3.91-2.14,2.57,1.35,5.71.14.13,4.36,3.27,4.17,3.24,1.24.16,5.29-1.52,5.18-2.26.4,2.71-2.87,4.6-3.43,6-2.18,5.3.09,5.73,4.14,8.2,3.09,1.88,6.92,5.27,9.85,6.38a9.27,9.27,0,0,0,2.65,1c.58.06,2-1.7,1.84-1.77,7,2.42,4.85,6.84,5.24,14.12.1,1.91-.19,8.9.73,9.89,2.8,3,5-1.39,7.53-1.39.54,0-1-1.52-1-1.5a8.23,8.23,0,0,0,1.9-1c4.2,7.26,9.82,11.05,3.48,18.9-2.48,3.06-4.93,6.18-5.05,11.1,0,1.52,3.68,10.45,3.27,10.47-5.22.18-1.57,5.87-2.54,9.47-1.17,4.37-6.22,9.05-9.62,13-3,3.48-4,3.4-8,5.47-.18.1-2.41,2.35-2,2.33-1.5.07-1.17-.26-2.59-.69-.47-.14-1.23-2.09-1.93-2.26-2.12-.51-1.3.57-2.92.75-.89.09-2,1.3-2.93,1.58-1.13.33-3.11-.6-4.35-.4-2.3.37-2.65,0-4.58,1.45-3.16,2.45-6.39,12-7.29,16.3-.81,3.89-2,7.93,0,9.82,1.72,1.64,3.58.33,5.63,1.72s1,3.6,3.24,4.62c-.65-.3,4.15-1,4.76-.91,3.48.65,1.49,1,3.69,2.18s3,2.4,6,1.59c2.12-.58,4.2-3.36,5.67-2.87,3.5,1.16-1.36,3.52-1.92,4.9-1.57,3.87.65,3.79,2.16,7.76a35,35,0,0,1,1.38,5.84c.17,2.07-1.46,5-1.25,7.17.12,1.28,3.85,5.11,4.5,6.35s1.78,1.67,2.39,2.84a7.78,7.78,0,0,0-.77,2.77c1.54,2,5.42-.07,6.8,1.77.93,1.24,0,5.64.25,7.16.35,2,2.06,1.93,1.46,4.36-.17.68-4,4.8-4.51,5.67-2.95,4.88-6.72,8.29-9.21,13.44A49.88,49.88,0,0,0,116.35,630c-.95,5.17-.11,6,2.69,9.53,1.87,2.35,6.55,6.87,7.62,9.45,1.26,3.06,1.08,2.66-1,5.49-4,5.55-9.94,8.06-10.72,15.78a11.84,11.84,0,0,0,2.58,8.55c.24.3,3.66,3.5,4,3.82,9.74.67,9.81,17.83,20.92,12,4.58-2.39,4.68-6.91,8.58-10.2,3-2.55,10.35-7,14.73-7.73,5-.81,13-.64,18.19-.66a82.77,82.77,0,0,1,16.3,1.89c1.84.37,1.22,1.14,3.36.91a43.46,43.46,0,0,0,4.92-1.79c3.07-3.06-1.13-4,1.79-6.54-2.45,2.14,6.3.32,3.84,0,1.44.19,2.75.06,4.24.36s1.17,2.47,3.59,2.81c1.06.15,5.86-2.08,6.88-2.92,2.07-1.7,2.36-4.2,4.33-6.08s6.84-3,8.27-5.79c.76-1.5-.33-4.53-.52-7-.22-2.89,0-5.51-1.21-8.14-2.16-4.63-6.12-4.34-1.34-10.39,2-2.52,7.1-7.91,9.8-9.14s6.11-.16,9-1.33c6.41-2.6,7.6-10.53,16.67-9.68,4.44.41,8,3.42,12.34,4.25,5,1,7.81.22,12.39,2.49,6.39,3.18,13.55,6.51,20.27,4.77,1-.27,2.47-1.61,3.51-2.08,2.56-1.14,5.16-1.12,8-2.78,4.24-2.51,8.53-4.49,12.93-6.73,4.74-2.41,8.08-4.55,13.41-5.33,4.38-.64,9.14,0,12.23-3.49,1.6-1.81,2.07-6,3.92-8.31,3-3.8,6.85-5.86,6.69-11.29-.09-2.76-6.83-16.71-3.45-18.77a.89.89,0,0,1-1,.44c-.86-1.35,1.66-1.14,1.66-1.47,0-.65-4.6-6.49.77-4-.72-.32-1.33,3.1.73,2.65.47-.32.34-.6-.41-.82,1.25.86,1.63-.69,2.28,1.37.17.53-.1,3.43.24,4.43.39,1.18,2.94,4.49,3.95,5.58,2.57,2.74,4,3.51,5.38,6.63.25.55,1.51.54,1.75,1,.53,1-1.37.87-.72,1.73.95,1.25,2.37,1.27,3,2.17.07.89-.48,1.4-1.64,1.52.46-.65,2.25,2.83,2.32,2.86,1.66.6.35-2.24.41-2.26,2.22-.74.17,3.93,3.59,4.11.09,0-.86-2-.28-1.73a49.38,49.38,0,0,1,2.42,5.63c-.05,1.08-4,4.91-2,6.34.84.64-.67,2.65,1.4,2.53,1-.09-1,5.13-.54,5.52a1.41,1.41,0,0,0,.66-.92,17.45,17.45,0,0,0,.19,2.84c-1-.47-7.32,13.13-2.94,12.37-.09,0-2.28,4.43-2.4,4.81-1,3-.38,3.63-.53,7.13a47.94,47.94,0,0,0-.28,6.5c.06.63,1.53,4.8.49,5.16.24-.09,1.56-1.16,1.83-.52-.4-1-3.16,3.69-1.36,3.4a3.07,3.07,0,0,1,1.15-.77c0,.61-.25,2,.6,2.21s.59-1.8,1.36-1c1.74,1.78-1.87,17.16-4.55,15.78,1.6.82,4.52,11.14,4.53,11.14a1.2,1.2,0,0,1,1.51-.32c1,.9-1.57,1.8.15,2.75.89.49,2.32-.55,2-1,.61.86,1.78,2,2.88.52-.76,1-1,.76.15,1.49.15.09-6.21.61-5.82,0-1.89,3.13,3.87,5.77,2.64,8.15.2-.39,0-1.91.64-1.81,1.94.33-1.95,4.7,2.21,3,.67-.27.06,3.56-.1,3.37a1,1,0,0,0-.89-.92c-1.7,5.59.73,2.4,3.49,5,1.1,1.06.7,5.88,3.28,6-2.22-.09-1.61,1.2-2.64,3,.53-.93-.13,6.11-1.27,3.91a6.79,6.79,0,0,0,2.06,2c.34,0,2.5-1.8,3.67-.45q-.94-.3-.9-1.11c1-.07,4.31,1.94,4.06,2.72-.09.27-.36-2,.07-1.47,1.19,1.44.82,1.89,2.78,3,1,.58,3.82,1,4.33,1.62.77,1-.66,7.15-.18,7.31a26.34,26.34,0,0,0,3.28.37c-1.13-.23-.61,2.93,2.14,2.29.92-.21,2.42-2.28,3.34-2.85a19.78,19.78,0,0,1,4.06-1.78,43.49,43.49,0,0,1,4.44-1.37c.77.16.24,1.82,1,2.38a21.38,21.38,0,0,0,2.16,2.9c.9.83,3.56.46,4.41,1a4.62,4.62,0,0,1-1,1.71c0,.8,1.91.37,1.75,1.91-.05.54-1.4,1.6-1.39,1.32,0,.3.09,8.08,1.14,5.93.24-.51-.4-1-.26-1.53.54-1.92,1.41,3.33.95,3,1.88,1.33,4.6,1.59,7.11,2,6.18,1,10.8,3.72,16,7.13,1.92,1.26,3.53,1.89,5.07,3.63s1.6,4,3.63,5c4.68,2.2,6.39-3.12,8-5.81.27-.44,2.4,4.32,2.87,4.67,1.54,1.15,3-.85,4.15,0a1.56,1.56,0,0,0,.23,1.32c.55.49,5.4,8,4.22,8,2.5-.07,3.34,3.09,5.27,6.06.34.52,2.83,2.26,2.73,3.17-.17,1.67-5.81,2-2.35,4-.44-.24-1.25.79-1.2.79.46,0,1.72-.75,2.1,0-.17.41-.33.83-.48,1.25.12-1.3,2.94,4.68,4.17,2.57-.14.24.05,1.1.48.93-1.25.5-2.94-.25-3.64.91a28.59,28.59,0,0,0-.48,4.68c.42.21,1.31-1.3,1.28-1.37.33.72-.5,3.25-.42,4.3a14,14,0,0,0,1,5.19c1.33,3.2,1.86,7,5.77,7.9-.17,0,1.46,8.2,1.41,9.59,0,.95,1.78-.91,1.48-1,.31.47.18.92-.4,1.36a7.8,7.8,0,0,0,1.65,0s.07,8.12,1.43,7.24c-.43.28,1.48,1.46.44,3.78-1,1.93.07,2.21-.46,5.75,0-.18,1.42,3.22,2.4,2.9-.37.12-.21,6.52-.63,6.63.75-.19.84-.92,1.59,0,.08.09-1.4,0-1,.91.9,2,4.47,6.62,2.13,9,1-1,2.62,2.07,3.75,1.44-1,.47,1.13,7.35,1.14,7.69,0-.15-.64,4,.94,2.75,2.06-1.69,6.68-3.52,9.45-5.21,1-.61.2-1.24,1.54-1.55,2.35-.54-.08.3,1.52.52,1.3.17,3.13,2.28,5.65,1.92a16.28,16.28,0,0,1-2.84-1.3s8.13-13.46,9.39-11.09c-.58-.06-1.17-.11-1.75-.14.58.24,9.88-6.71,9.86-5.75,0-.43-.78-2.4-.52-2.38,2.15.17,3.41.76,4.91,0,.71-.35,1,2.32,1.2,2,1.42-1.79,2.91-.87,4.68-1.43,3.25-1,2.84-1.11,5.34-3.13,1.55-1.24,3.09-2.94,4.56-4.31.22-.2,1.68.26,2.24-.15.34-.25-.07-1.54,1-2.26,3.51-2.46,8.35-4.29,10.95-6.54.71-.61,5.06-10.35,6.36-7.49-.64-1.4,3.64-6.68,3.82-6.21a1.81,1.81,0,0,1,0-1.8c.71.21.57,2,1.54,2.43,1.71.78,3.44,1.47,5.19,2.28a30.72,30.72,0,0,0,3.69,1.53c1,.25,2.9-.63,4,.11s.24,2.36.58,2.68c.82.75,2.14,1.07,3,2.18,1.17,1.44,1.65,3.66,3.7,4s3.76-1.51,4.82-1.91c2.21-.85,4.48-1,7-1.73,3.71-1.14,5.74-1.42,5.17-5.13a.88.88,0,0,1-1.09.27c-.48-1.59,1-.41,1.65-1.35-.89,1.35,1.81-4.11,1.6-2,.29-3-.89-2.47-1.26-5.13,0,.34,1.59-8.55-.47-8.46-.73,0-.86,1.38-1.14-.2s8.62-10.78,9.49-9.62c1.69,2.28,2.6,2.75,4.09,4.79.77,1.06.42,4.28,2.13,4.74a1.23,1.23,0,0,0,.42-1c-1.49,2.52,6.35-1.57,6-1.39,4.11-2.3,7.57-4.92,11.49-7.17,7.84-4.5,12.78-10.63,21.22-12.34,3.67-.75,6.46.13,10.22,1.59,5.64,2.19,11,4.19,17.1,5.08,2,.3,6.1-.51,6.44-.52,3.35-.15,4.55,0,6.64-1.56s2.35-2.9,5.22-4.08c.46-.19,7-1.84,5.86-2.12a.85.85,0,0,1-.86,0c.11.32,1.73-3,1.39-2.83-2.76,1.34-3-5.19-2.51-6.51,1.24-3.23-.13-.75,3.07-2.77.88-.56,2.89-2.24,3.6-2.31,3.78-.36,2.57,2.2,5.33,3.2.78.28,3.36-1.52,4-1.17a15.21,15.21,0,0,0,1.59,1.55,1.5,1.5,0,0,0-1.23,1.2c1.05,1.17,1.14-.9,1.14,1.52,0,.88-3,.26-.24,4,.79,1.09,4,3.77,4.11,2.06-.3,3.13,7.87-3.37,8.47-3.78,2-1.42,3.26-1.55,4.33-4.29-.11.28,1.27-.31,1.61-1.15s-2-.52-1.63-.94c2.66-3.09,1.86-3.42,3.15-6.95.54-1.45,2.33-3.85,4.13-4.49,3.09-1.09.18,1.56,2.43,1.85,1.86.24,5-.32,4.57-2.22-.15-.67,4.91,3.11,4.43,3.41,4.86-3.08,5.14-.11,9.75,2.62,2.58,1.53,5.94,3.63,8,5a22.27,22.27,0,0,0,6.22,2.81c1.06.13,7.77-2.71,6.22-3.41,1.17.53.42.79,1.91.25-1.35.5,1.28-5.61,2.56-6.44-1.28.83,1-2.23,1-2.31,1.23-1.59,2.67-2.67,3.68-4.53.78-1.44,1.42-8.22,3.34-8.1-1.67-.16,1.8-2.12,1.56-1.78.1-.15.8-2.87,1.14-3.61a30.42,30.42,0,0,1,2.43-4.67c1.76-2.53,6.23-5.57,6.7-8.31s-2-6.73-2.24-9.19a41.83,41.83,0,0,0,.17-4.25c-.38-3.5-2.13-4.87-4.11-7.24-4.83-5.77-10.56-6.18-10.16-14,.24-4.8,2-10.95,3.66-16,.19-.59-.36-2.16-.2-3,.26-1.38,2.57,0,2.53-1.4-.11-3.64-3.36-3.92-4.56-6.83-.82-2,1.13-5.33.29-7-1.19-2.4-5.82-1.72-6.5-2.73a5.81,5.81,0,0,0,.54-1.73,2.93,2.93,0,0,0-2.54-1.73c-1.18-1.2-3.52-2.12-4.88-3-.34-.23-2.07-.26-2.72-.76.5.38-2.26-3.54-2.23-3.47-1.66-3.38-3.69-6.33-4.69-10.59-1.69-7.21-4.81-3.83-10.15-6.12-3.88-1.65-5.18-6.32-4.82-9.66.18-1.71,1.71-3.19,1.38-5.1s-3.09-3.41-3.62-5.2c-.89-3,.89-5.06,2.68-7.2,2.68-3.2,6.41-4.52,8.34-8.5,2.05-4.24,1-.8.31-5.22-1.31-8.53,8.71-9.31,14.56-13.52,2-1.46,4.06-4.26,6.48-5.86.09-.06,5.63-3.74,5.23-3.81-2-.34,2.25-4.67,4-5,3.51-.66,6.05,2.09,7.46,3.27,1.24,1,2.24,2.66,3.58,3.24s3.88-.29,5.28.56c2.09,1.26,4.62,8.58,7.31,8.53,1.35,0,10.24-9.56,10.36-11.15.25-3.31-2.84-2.31-1.29-5.24.78-1.47,1.91-.23,2.62-.38,1.58-.34,1.41,2.21,2.27-.21.48-1.35-.87-2.27-1.29-3.92-1.15-4.57-2-5.13,1.48-6.25,2.25-.81,0-6,.09-6.11-2.59,2.18-3.93-7.28-2.92-9.12a9.7,9.7,0,0,0,2.16-.11c.45-.11-1.47-.55-1-.27a3.56,3.56,0,0,1,.92-.67.85.85,0,0,1-.9-.45,20.26,20.26,0,0,0,3.54-1.29,94,94,0,0,1-6.12-7.17c-1.94-2.77-2.81-3.64-3.86-6.87-.69-2.12-1.18-2.38-1-4.61.17-1.72.17-.44.82-2a48.45,48.45,0,0,1,3.4-4.91c.56-3-1.45-3,1.6-6.36.88-1,5.8-4.76,6.72-4,.15.11-1.71.44-1.14,0a3.21,3.21,0,0,0,1.77-.57c-2-2-4.39-2.63-4-5.23.62-4.16,4.19-1.18,7.06-4.56-1.28,1.5,3.35,3.88,4.33-.94,0,0-1.25-8.45,0-7.86-1-.46-2.91-2,.48-2.3,4.51-.38.92,4.51,5.51.11,1.63-1.56,2.9-5.37,3.3-7.59.12-.65-.51-6.86-1.5-5.59,5.36-6.9-20.79-11.89-22-17.3a1.2,1.2,0,0,1,1.09-.44c.67-.31-1.35-1.56-1.37-1.78,0,.18,5.48-9.33-.36-6.42-1.72.85-3.32,8-5.08,1.3.09.33-2,2.76-2,3.35,0,1.62,2.16,4,3.26,5.08s6.16.16,3.78,3c-.58.71-5.77.07-6.64.59-1.91,1.15-4.28,8.72-6.29,9.2-3.37.8-6.22-7.16-9.16-7.16-.37,0,3.49-4.57,3.23-4.77-1.48-1.13-5.12,0-6.48-.56-2.57-1,.46-.62-1.22-2.44.31.33-3.33-.08-2.57-1.38s4.25-1.7,5.5-1.81a14.36,14.36,0,0,1,3.41,1.12c.54-.09,1.68-1.56,1.21-1.61.91.09,1.68-.88,2.67-1s-.25,3,2.42,2.14c4-1.27,2.18-2.54-.72-4.06-2.38-1.25-5.35.57-5.7-3-.07-.71,2.31-4.91,2.51-5.33.42-.9-1.59-1.13-.24-2.68a16.8,16.8,0,0,1,2.6-1.15c1.25-.74,7.93-1.51,8.37-2.46.86-1.85,1.89-2.86.86-5-.91-1.88-4-.53-6.83-2.32-1.92-1.23-4.51-3.74-4.27-5.06a71.08,71.08,0,0,0,4-6.38c-.71.63,3.9-1.2,4-1.24a18.68,18.68,0,0,0,4-2.13c5.19-3.7,1.52-3.94,2.16-8.81.83-6.39,8.53-10.43,12.21-14.7,1.22-1.41,1.52-.25,2-3,.64-3.8.53-3.37-2.12-3.25-2.2.1-1.56,2.94-4.69,1.57a5.06,5.06,0,0,1-2.43-5.31c1.68-5.7,7-2.62,4-10-1.07-2.69-2.15-2.51-2.67-5.23-.48-2.57.48-4.37.9-6.76-.06.36.24-3.18.19-3.07,1.53-3.41,2.11-1.94,4-2.93a35.57,35.57,0,0,0,9.23-6.55c3.4-3.17,6.75-5.84,10.16-8.94,1.63-1.49,7.61-5.56,3.26-5.76-1.11-.05,1-4.59,1.19-4.94A62.52,62.52,0,0,1,910.48,296ZM794.6,693.35c-1,.34-3.13,5.2-3.57,6.38.15-.41-.72.37-.75,2.53,0,1-4.6-2.82-5.2-3.25-1.58-1.15-2,.57-3.72-.18,1.79.79-1.23-2.46-.87-2-1.36-1.78-1.89-5.39-4.85-7.43-2.77-1.9-7.92-.31-10.15-2.34-4.23-3.87,6.81-15.46,13.27-11.6,1.47.89,2.08,4,3.65,5.1,1,.65,3.25.07,4.51,1.25,2.19,2.07,1.81,4.65-.53,3,.38,2.71,4.86,1.17,5.25,1.84S795.14,693.18,794.6,693.35ZM705,625.4c-2.61,1.31-5.42,4.17-8.69,3.75-.56-.07-8.34-4.26-8.48-2.41,0-.35-1.16-3.2-1.75-2.59,2.81-2.73,7.64-10,13.42-7.45.43.2-1.1.45-.58.75,2,1,3.36,1.13,4.88,3.56C704.46,622,707.2,624.31,705,625.4ZM634,518.13c-.16.79-2.6,1.28-2.8,2.44-.39,2.23,5,2.51.85,3.17-2.28.37.78,11,2.82,11.36-4.24-.82-5.56,5.46-6,8.06-.41,2.79,1.08,7.43-.14,10-.61,1.27-3.81,2-3.65,4-.23-2.82,2.63,2.19,1.07,1.44,3.44,1.79,2.21,5.66.83,8.85-.78,1.81-.42,2.68-1.16,3.5-1.27,1.41-3.55,2.4-5.24,3.94-3.07,2.8-4.83,6.86-9.23,5.61-2.36-.68-2.09-1.14-3.94-1.85-1.12-.44.66-1-.37-1.49-2-1-1.29,1-1.19,1-2.49,0-4.64-2.28-5.91-4.06-2.37-3.31-1.41-3.55-.35-6.3.57-1.5,5.38-7.26.67-7.73-.93-.09.5,3.44-1.86,2.71-.94-.29-2-2.45-1.92-3.77.21-2.48,4-5,1.47-6.94-1.14-.87-3.2.33-3.44.12-1.35-1.17-.27-1-1.39-4-1.22-3.22-4.25-4.85-5.45-8.41-2.66-7.88,5.78-11.25,5-18.44-.09-.85-2.41-1.88-2.66-2.49a26.12,26.12,0,0,1-.59-3.71c-.24-1.18-1.6-6.12-1.51-6.73.59-4.34,5.38-7.53,7.74-10.85.38-.52-1.56-.85-1.2-2.09a13.54,13.54,0,0,1,1.6-3.54c2.11-1.92,5.27-.42,6.34-1.43,2.2-2.35,4.4-6.73,8.3-2,2.21,2.66,1.32,9,3.12,12,3.17,5.31,8.83,5.42,13.1,8,2.92,1.75,5.7,8.61,8.1,9.67C634.62,517.75,634.26,517.73,634,518.13ZM603.1,379.61c-.21.35-5.29,5.17-4.84,2.06.12-.85,2.58-4.65,2.58-4.57-.06-6.13-4.66-.53-4.73-.64-1.66-2.83-1.43-7.14-3.67-9.84-.92-1.12-2.19-.45-2.93-1.06s-.36-2.29-.72-2.52c-1.64-1.06-2.91-.72-4.48-2-1.22-1,.25-2.35-1.42-3.23-1.33-.7-4.17.38-3.54.75-1.73-1-.34-1.77-1.51-2.67,1,.74-1.16-2.67-1-2.06a22.44,22.44,0,0,1-2.38-.55c1.57,1.74,1.11-4.12,1.08-4.31a12.72,12.72,0,0,0-2.57-4.87c1,.8-5.27-.36-5-.41-.74.13.12,2.22-.67,2.43-1.27.34-2.83.45-4.25.68.26,0,2.47-4.2,2-4.59-1.9-1.52-4.62,1.94-5.78,2.3a21,21,0,0,1-7.69.61c-1-.06-1.22-1.44-2.5-1.33-.47,0-2.65,1.49-3.12,1.49-.11,0-1.62.25-1.82.25-.84,0-2.09-1.48-2.74-1.48-1.9,0-4.42,3.62-6,2-2.86-2.93,3.58-4.66,4.69-5,2.75-.92,2.75-.34,5.08-.44,1.15-.05,5.34.07,5.9-.07,2.57-.66,3.77-2.7,6.13-3.34,3-.79,3.8.79,6.63.65,3.23-.17,1.35-2.67,5.62-1.24,2.26.75,1.3,2.12,4.26,2.72,2.29.46,7.61-2.82,9,2.22.62,2.24-2.4,3.24-2.26,5.45.19,3,2.7,3.68,3.15,6.62-.44-2.82,5.77,0,6.69.15,3.72.67,4-.07,6.48,3.09,1.39,1.8,1.49,3.06,2.15,5.15.78,2.43,2.32,4.14,3.11,6.27C603.21,371.29,604.86,376.67,603.1,379.61Zm-112.28-3.07c-1.07-1.39-1.85,6.37-1.75,6.22-1.09,1.74-3.7,2.4-5,4.46-1.73,2.67-1.14,4.06-2,7.49-.58,2.17-1.78,1.9-2.41,2.86.23-.34-.09,4-.15,4.25-.71,3.06,0,1.82-1.93,4.09-1.37,1.57-12.19,5-12.29,5.32,1.06-3.85-7.15-2.86-10.65-3.74-1.69-.42-7.31-2.88-8.69-2.67-1.89.29-5.94,5.55-6.29,5.5,3.11.42,2.53,1.93-.08,1.36-.28-.06-.72,2.61-.26,3.14,1.59,1.82,2.76-.13,3.76.54s4.49,2.76,3.71,4.5c-.55,1.24-9,.48-8.69,3.74-.64-7.07-4-4.61-5.91-.19-1.54,3.49-4,5.94-5.75,9.72-1.86,4-1.63,6.49-4.59,9.82-3.19,3.61-4.9,4.88-9.1,5.31-5.49.57-6.86,0-8.8-3.33-1.67-2.89-1.93-5.23-3.89-8-.22-.3-3.26-3.5-3.52-3.62-2.28-1-2.84,7.24-2.86,7.39-.21,1.55-4-3.17-4-3.16,2.59,3.08.22-3.25.36-2.54a17.86,17.86,0,0,0-4.34-8.31c-1.94-1.8-6.47-2.29-8.54-4.35-1.76-1.76-3.36-5.5-5.92-6.42-3.65-1.31-7.84,5.47-9.95-.2-.28-.76,2-5.4,2.19-6.44a22.72,22.72,0,0,0,.12-4.56c0,.31-5-1.88-3.23-5.11.32-.6,5.3-2.11,6.34-2.52a1.41,1.41,0,0,0,1.9,0c1.12-.84,1.63-2.34,2.61-3.39,2.16-2.33,3.76-3.18,5.49-5.33-.82,1-3-3.7-3-4.1-.25-1.79,1.34-2.89.69-5-.46-1.53-2.88-1-3.19-2.42-.35-1.63,1.48-3.88,2.58-5.09,1.75-1.91,2.87-2.33,4.11-4.17.42-.63-.28-2.57.18-3.57s2-1.38,2.51-2.57c1.42-3.32-.2-3.64,3.12-6a23.34,23.34,0,0,1,7.55-3A1.47,1.47,0,0,1,391,354c.4.82,6.17.54,7,.6,2.92.22,1.42-2.44,4.5.35.27.24-.82,1-.86,1s10.2.6,9.19,1.39c.81-.64,1.58-2.26,3.26-3.08s3.87.18,5.92-1c3.93-2.24,3.65-5.82,9.1-5.77,2.74,0,4.14.87,6.12,3.6.85,1.17,2.48,8.94,4.77,3.78.74-1.68,1.12,8.72.24,7.85,1.87,1.85,5.31-1.45,7.18-.17.81.55-.65,2.45,1.61,3.17a3.06,3.06,0,0,0,.82-1.7.86.86,0,0,1,.24,1.12c-.19-.61.92-1.65,1.52-1.61-2-.11,2.17-3.81,3.31-4.06,0,0,2.77,3.21,2.84,3.3.8,1.06.84,2.22,1.38,2.9,1.3,1.63,4.73,3,6.27,4.84a46.62,46.62,0,0,1,2.82,4.24,1.21,1.21,0,0,1-.83.9c-.13.88,2.59-.33,2.05-.7,2,1.39,5.35-4.63,3.51-6.9,0,0-3.18,3-4.09,2.32-1.54-1.24,1.81-3.6,3-4,1.54-.52,1.72.41,3.15.69a17,17,0,0,1,2.84.18c1.21.51,3.17.85,4.41,2s.76,3.25,2.41,4.26,2.37-1,3.43-.64C490.14,373.41,489.85,375.26,490.82,376.54Zm408.6-30c.6.52-8,12.77-11.62,10.59.06,0-1.22-3.46-.49-3.77,1.78-.76,3,.21,3.23-2.82.05-.52-4.34-3.77-3.7-5.2a46.26,46.26,0,0,1,5.35-2.82C895.71,342,896.88,344.28,899.42,346.51ZM246.55,688.69c3,.91-3.16,12-4.21,7.55.49,2.08-2.4-1.83-2.41-1.83-1.23-1.24-2.54-1.94-3-3.51a5.13,5.13,0,0,1,4-6.32C245.52,683.92,244.25,687.93,246.55,688.69Z"/>
            <path :class="getBoundsClass('unknown')" :style="getBoundsStyle('unknown')" @mouseover="hoverOn('unknown')" @mouseout="hoverOff('unknown')" d="M836.91,847a14,14,0,0,0-6-11.83c4.53-4,6.57-9.65,5.36-15A13.65,13.65,0,0,0,821,809.57c-7.23,1-14.93,8-14.43,16.68a14.17,14.17,0,0,0,3.94,9.08c-3.85,2.23-8.27,5-10.1,7.9a12.51,12.51,0,0,0-8.65-11.05l-.13,0c-1-.41-2.53-1-4.07-1.52-9.35-3-14.24,1.77-16.09,4.3a12.59,12.59,0,0,0-3.28,5.14h0a.14.14,0,0,1,0,.06,16.42,16.42,0,0,0-.38,8.41A12.51,12.51,0,0,0,785,861.35h0a19.1,19.1,0,0,0,7.18-3.17l.5-.37a18.25,18.25,0,0,0,6.42-7.25c.33,5.12,2.45,11.06,5.65,14.46a17,17,0,0,0,10,5.07,12.49,12.49,0,0,0,13,.45,12.36,12.36,0,0,0,3.15-2.51C843.08,859.08,838.64,849.76,836.91,847Zm-3.21,9.5a11.54,11.54,0,0,1,.37,2.27A13.6,13.6,0,0,0,833.7,856.52Z"/>
            <path :class="getAreaClass('unknown')" :style="getAreaStyle('unknown')" @mouseover="hoverOn('unknown')" @mouseout="hoverOff('unknown')" d="M826.34,853.69c1.52,2.38-5.16,5.2-4.75,5.94-1.51-2.69-5.54-.86-7.73-3.18-1-1.08-1.5-5.93-1.09-6.82,1-2.19,7.37-5.8,9.4-5,3.86,1.44,1.42,2.93,2.27,6.14C824.93,852.56,825.17,851.85,826.34,853.69ZM824.06,823c-.56-2.68-5.1.6-5,2.57C819.27,828.9,824.63,825.29,824.06,823ZM788,844.09c0,.16-9.11-4.16-5.61-.44,0,0-2.44.86-2.28.36-.68,2,1.48,5.09.18,5.77,1.57-.75,3-.54,4.57-1.71C786.88,846.57,788,846,788,844.09Z"/>
            <path :class="getBoundsClass('san-yara')" :style="getBoundsStyle('san-yara')" @mouseover="hoverOn('san-yara')" @mouseout="hoverOff('san-yara')" d="M560.62,911.63c0,9.13-6.33,12.51-8.37,13.36a13.53,13.53,0,0,1-5.16,1c-3.63,0-8.39-1.47-13.15-7.21a20.59,20.59,0,0,1-1.48-2l-.25-.24c-3,3.35-7.08,5.08-9.51,6.12-.41.17-.8.33-1.12.48a12.5,12.5,0,0,1-16.91-4.88,12.88,12.88,0,0,1-1.14-2.8,14.69,14.69,0,0,1-4.18-8.35c-.05-.41-.09-.68-.12-.85a12.68,12.68,0,0,1,5.66-13c4.48-4.85,11.35-8.67,18.54-6.07a13.33,13.33,0,0,1,6.24,4.64,1.46,1.46,0,0,1,.16-.19c.55-.69,1.83-2.27,5.88-4.57,2.9-1.65,7.36-3.68,12.56-2.33a13.14,13.14,0,0,1,7.19,4.82,12.51,12.51,0,0,1,3.18,14.36,13.2,13.2,0,0,1,1.88,5.68C560.59,910.3,560.62,911,560.62,911.63Z"/>
            <path :class="getAreaClass('san-yara')" :style="getAreaStyle('san-yara')" @mouseover="hoverOn('san-yara')" @mouseout="hoverOff('san-yara')" d="M548.08,910.78c.68,7.17-6.63-2.08-5.5-1.75-.71-.19-4.08-4.35-4.73-3.81,1.48-1.23.42-4.15,1.71-5.75.22-.27,5.7-4.08,6-2.12a1.17,1.17,0,0,0,0,1.37c1.52-.36.58-.52,1.55.2-2.13-1.6-4.33,4.85-4.08,6.07C543.46,906.73,548,909.5,548.08,910.78Zm-26.44-6.59c-1.08-.84-1-4.73-2.46-5.25-1.64-.6-4.62,2.12-5.74,3.53-2.22,2.77-2.08-.26-1.68,3.21.1.86,5.61,5.51,3.83,6.5C518.54,910.54,527.1,908.52,521.64,904.19Z"/>
            <path :class="getBoundsClass('ursa-madeum')" :style="getBoundsStyle('ursa-madeum')" @mouseover="hoverOn('ursa-madeum')" @mouseout="hoverOff('ursa-madeum')" d="M445.64,827.79c0,.34,0,.67-.08,1a12.61,12.61,0,0,1-.17,4,13.84,13.84,0,0,0,0,1.89c0,1.12,0,2.52,0,4.25-.21,4.64-1.29,7.78-3.05,10.35a12.87,12.87,0,0,1-4.61,6.75,13.5,13.5,0,0,1-4.23,2.19,12.51,12.51,0,0,1-4.79,2.69,12.87,12.87,0,0,1-3.75.56,12.62,12.62,0,0,1-7.65-2.58,19.77,19.77,0,0,1-6.89-3.54c-.58-.09-1.45-.19-2.14-.26a37.14,37.14,0,0,1-7-1.29c-.36-.11-.75-.19-1.14-.29-3-.73-8.56-2.08-12.78-7.27a18.48,18.48,0,0,1-4.11-11.22,12.61,12.61,0,0,1-.7-7.86,13.36,13.36,0,0,1,2-4.44,18,18,0,0,1-10,5.59,22.2,22.2,0,0,1-2.55.32,15.22,15.22,0,0,1,.92,6.06.86.86,0,0,1,0,.16,15.74,15.74,0,0,1-.5,7.42l0,.11-.09.34c-2.53,9.5-15,16.17-23.52,14.94-5.32-.76-15.6-6.68-15.3-16.9a13.62,13.62,0,0,1,1.91-6.35c.87-3.53,3.14-6.32,5.36-8.65,2.74-2.88,6.58-6.2,11.92-6.34a13,13,0,0,1,3.72.44,16.62,16.62,0,0,1-.25-12.13,16.14,16.14,0,0,1,3.49-10.26A12.6,12.6,0,0,1,382.07,795c.18.17.43.38.63.54.56.49,1.21,1,1.89,1.69l.15.15a17.35,17.35,0,0,1,4.2,17.77,20,20,0,0,1-2.58,5.31,33.54,33.54,0,0,1,7.64-6,18.63,18.63,0,0,1,2.05-.82,14.15,14.15,0,0,1,6.29-2.49,48.72,48.72,0,0,1,3.81-3.22c.3-.24.58-.45.79-.63,6.59-5.76,13.95-8.1,21.87-6.93h.07a20.54,20.54,0,0,1,14.51,8.52,33.22,33.22,0,0,0,2.52,7.45,12.28,12.28,0,0,1,.48,2.95,33.9,33.9,0,0,1-.53,6.84C445.76,826.77,445.65,827.49,445.64,827.79Z"/>
            <path :class="getAreaClass('ursa-madeum')" :style="getAreaStyle('ursa-madeum')" @mouseover="hoverOn('ursa-madeum')" @mouseout="hoverOff('ursa-madeum')" d="M433.9,819.82c.11,2.61-.64,5-.75,7.42.08-1.74-.87,3-.68,2,0,.26.7,1,.68,1.07-.54,2.62-.15,4.56-.31,8.12s-.89,4.11-2.82,5.89c-.7.65.81,1.26,0,1.87-.58.44-2.07.14-2.47.47.6-.49-2.37.53-1.66.32,0,0-.46,1.9-.92,2s-.75-1.17-.67-1.3c-.87,1.55-1.43-1.36-1.22-1.5-3.2,2.23-4.94-1.2-7.41-2.23-3.48-1.45-7.41-1.05-10.8-2.08-2.64-.81-5.86-1-7.88-3.5-2.41-3-.36-5.79-2.33-8.27-.26-.34,4-4,4.64-4.34,3-1.39,3.14,1.33,3.93-1.84.22-.87,5.82-.41,6-.11-1.13-2.09,4.18-5.57,5.92-7.09,3.37-3,7.11-4.69,11.83-4,2.8.41,1.49-.46,3.59,1.62.4.4,1.32-.49,1.7.25.27.52-.63,1.66-.23,2.22-.16-.23,1.46,1.67.69,2.49C432.5,819.5,433.72,819.2,433.9,819.82Zm-58-13.57c-1.38-1.34-3.4-2.65-4.37-4.49a.1.1,0,0,0-.18,0c-.08,2.32-4.35,4.68-2.14,6.53a.48.48,0,0,1,.09.62c-1,1.67-4.47,8.42,3.05,7.08C375.93,815.4,379.28,809.63,375.9,806.25Zm-16.7,30a3.55,3.55,0,0,0,1.22-2c.13-3.19-1.81-.08-2.19.72a.27.27,0,0,1-.29.15,38.05,38.05,0,0,1-4.62-1.6,1.77,1.77,0,0,1,0-1.16c-.1-1.93-5.82,4.18-5.82,5.18a1,1,0,0,0,.85,1c-.85,0-2.4,2.59-2.4,2.62-.05,1.84,3.59,4,4.59,4.16,3,.43,9-3.17,9.66-5.78H359l.06-1,1.38.19C361.06,836.6,360.31,836.8,359.2,836.23Z"/>
            <path :class="getBoundsClass('biazo')" :style="getBoundsStyle('biazo')" @mouseover="hoverOn('biazo')" @mouseout="hoverOff('biazo')" d="M182.75,168.32a16,16,0,0,0-12-2.74l-.86.17a13.46,13.46,0,0,0-2.49-.3,17.9,17.9,0,0,0-11.9,4.68h0a18.12,18.12,0,0,0-1.95-3.43c-3.37-4.68-8.29-7-12.25-8.85-.93-.44-2.33-1.1-2.72-1.35-13-9.48-24.89-2.92-30-.11-8,4.42-10.65,11.58-12.24,15.86-.31.84-.76,2-1.07,2.66a17.23,17.23,0,0,0-7,6c-.21.11-.41.23-.61.36a13.34,13.34,0,0,0-6.1,9.71A13.77,13.77,0,0,0,81,202a21.06,21.06,0,0,0,.12,3.14,66.19,66.19,0,0,0,1.25,7l.06.22a23.27,23.27,0,0,0-1.62,9.94,11.56,11.56,0,0,0-1.47.59c-6.63,3.07-10.69,8.23-11.15,14.15a15.05,15.05,0,0,0,7,13.67,16.82,16.82,0,0,0,9.37,3A14.45,14.45,0,0,0,95,249.33a15.64,15.64,0,0,0,4.1-8.12c.28.11.57.22.87.32a13.63,13.63,0,0,0,11.23,1.52,12.38,12.38,0,0,0,4.28,4.11l.75.74a13.65,13.65,0,0,0,1.54,1.4c5.28,4.09,12.56,4.49,19.47,1.06a23,23,0,0,0,8-6.39l.51-.1a38.69,38.69,0,0,0,8-2.14c4.52-2,12.43-8.6,14.08-14a17.61,17.61,0,0,0-1.09-14,12.58,12.58,0,0,0,10-11.08l0-.1a13.48,13.48,0,0,0,.26-7c1.81-1,10.58-6.15,11.4-14.87A13.49,13.49,0,0,0,182.75,168.32Zm-31.6,42.23a.55.55,0,0,1,.08-.15C151.27,210.54,151.25,210.59,151.15,210.55Zm12.39-9.41c-.07-.07-.11-.29-.08-.74,0,.18.19.37.38.56a1.89,1.89,0,0,1,.42.49A2.55,2.55,0,0,1,163.54,201.14Zm5.16-20.59a.06.06,0,0,1-.11,0h.14Z"/>
            <path :class="getAreaClass('biazo')" :style="getAreaStyle('biazo')" @mouseover="hoverOn('biazo')" @mouseout="hoverOff('biazo')" d="M175.48,178.49c2.11,1.49-3.43,5.57-4,5.83-2.26,1-1.41,1.22-3.63.52-.63-.21-1.17-1.4-1.83-1.65-1.35-.52-3.33-.75-5-1.4a.1.1,0,0,1,0-.17,16.78,16.78,0,0,1,2.5-1.77.18.18,0,0,0,.12-.13A5.15,5.15,0,0,1,167,178c.85,0,1.52,1.84,1.57,2.57a.06.06,0,0,0,.11,0C169.87,178.88,173.11,176.77,175.48,178.49Zm-10.81,20.69c1-2.21-2.36-.12-2.45,0-1.15,1,2.07,2.39,2,2.3-.1-.3-.82-.72-.8-1.06C163.31,202.88,165,198.59,164.67,199.18Zm-8.86,24.9c1.67-5.5-2.5-6-4.57-9.65.1.18,2.69.3,2.72-.41a13,13,0,0,0-2.37-4.19,3,3,0,0,0-.44.72c1,.43-5.75-8.93-5.76-8.46,0,.13,1.92-4.21.05-3.67a.77.77,0,0,1-.74.83c-1.42-1.36-1.22-7.76-1.19-9s-.72-4.06-.6-5.45c.3-3.57,2.91-7.33.44-10.75s-8.93-5-12.19-7.41c-5.59-4.08-10.22-2.77-16.56.73-7.28,4-5.6,12.71-11.5,17.42-2.85,2.27-2.85.5-5.4,4.48-.84,1.31-1.9,3.32-3.25,2.63-.65-.34-.65,2.51-.63,3.16a.29.29,0,0,1-.11.22c-2.94,2.52,1.16,3.57,0,6a6.07,6.07,0,0,0-.17,2.56c0,.23.57,3.94.83,4.83.87,3,1.71.72,1.24,4.13-.29,2.15-5.62,9.82.72,12.24,2.81,1.07,3.59-6.08,8.1-1.25,1.86,2-.18,1.65-.25,2.69-.06.86-2.27,4.72,1.52,2.76-.39.18.59,2.59,2,1.79.53-.29.25-2.17,1.1-2.65,1.08-.63,3.44-2.62,4.28-2.65,4.46-.14,8.22,1,6.74,5.56.6-1.68,1.81,4.58,1.81,5.11,0-.73,3.52,3,3.67,3.06,3.45,2.67,10.15-2.27,10.14-3.59a3.41,3.41,0,0,1,1.39-2.38c.34-1,9.56-2.18,11.74-3.14C152.05,228.79,155.76,224.26,155.81,224.08ZM84.64,234.16c-2.79,1.29-5.86,3.83-2.47,6.09C88.55,244.51,87.35,232.88,84.64,234.16Z"/>

            <path :class="getBoundsClass('lake-ashville')" @click="selectWater('lake-ashville')" :style="getWaterBoundsStyle('lake-ashville')" @mouseover="hoverOn('lake-ashville')" @mouseout="hoverOff('lake-ashville')" d="M799.29,695.17a5.19,5.19,0,0,1-1.55,2.07,34.35,34.35,0,0,0-2,4.23,4.31,4.31,0,0,1-.43.89,5.25,5.25,0,0,1-5.17,5.1c-2.19,0-4.28-1.51-6.83-3.51a6.94,6.94,0,0,1-3.89-.52l0,0a5,5,0,0,1-2.9-3.61,16.11,16.11,0,0,1-1.77-3.27,7.63,7.63,0,0,0-1.83-3,13.62,13.62,0,0,0-2.62-.28c-2.52-.12-5.65-.28-8.12-2.53-2.67-2.44-4.21-7.43.26-13.44s12.49-10,19-6.14a10.34,10.34,0,0,1,3.66,4.47l.19.38a8.6,8.6,0,0,1,5.17,2.15,10.12,10.12,0,0,1,2.46,3.52,5.08,5.08,0,0,1,3.14,2.39l.08.14C800,691.58,800.11,693.13,799.29,695.17Z"/>
            <path :class="getWaterClass('lake-ashville')" @click="selectWater('lake-ashville')" :style="getWaterStyle('lake-ashville')" @mouseover="hoverOn('lake-ashville')" @mouseout="hoverOff('lake-ashville')" d="M794.6,693.35c-1,.34-3.13,5.2-3.57,6.38.15-.41-.72.37-.75,2.53,0,1-4.6-2.82-5.2-3.25-1.58-1.15-2,.57-3.72-.18,1.79.79-1.23-2.46-.87-2-1.36-1.78-1.89-5.39-4.85-7.43-2.77-1.9-7.92-.31-10.15-2.34-4.23-3.87,6.81-15.46,13.27-11.6,1.47.89,2.08,4,3.65,5.1,1,.65,3.25.07,4.51,1.25,2.19,2.07,1.81,4.65-.53,3,.38,2.71,4.86,1.17,5.25,1.84S795.14,693.18,794.6,693.35Z"/>
            <path :class="getBoundsClass('great-sine')" @click="selectWater('great-sine')" :style="getWaterBoundsStyle('great-sine')" @mouseover="hoverOn('great-sine')" @mouseout="hoverOff('great-sine')" d="M710.72,625.51a6.26,6.26,0,0,1-3.46,4.36,19.17,19.17,0,0,0-1.79,1.1c-2.11,1.38-4.92,3.22-8.46,3.22a9.94,9.94,0,0,1-1.32-.08,9.53,9.53,0,0,1-2.88-1c-.67-.31-2.37-1.1-3.56-1.54a5,5,0,0,1-1.81.18,5,5,0,0,1-4.4-3.62,3.7,3.7,0,0,1-.48-.42,5,5,0,0,1,0-7l.14-.14c.37-.36.86-.91,1.38-1.49,3.06-3.4,9.42-10.49,17.51-6.91a5.22,5.22,0,0,1,2.41,2.18,11.31,11.31,0,0,1,4,4l.27.32C709.36,619.89,711.39,622.3,710.72,625.51Z"/>
            <path :class="getWaterClass('great-sine')" @click="selectWater('great-sine')" :style="getWaterStyle('great-sine')" @mouseover="hoverOn('great-sine')" @mouseout="hoverOff('great-sine')" d="M705,625.4c-2.61,1.31-5.42,4.17-8.69,3.75-.56-.07-8.34-4.26-8.48-2.41,0-.35-1.16-3.2-1.75-2.59,2.81-2.73,7.64-10,13.42-7.45.43.2-1.1.45-.58.75,2,1,3.36,1.13,4.88,3.56C704.46,622,707.2,624.31,705,625.4Z"/>
            <path :class="getBoundsClass('ponkapoag-lake')" @click="selectWater('ponkapoag-lake')" :style="getWaterBoundsStyle('ponkapoag-lake')" @mouseover="hoverOn('ponkapoag-lake')" @mouseout="hoverOff('ponkapoag-lake')" d="M637.78,531.19a5.1,5.1,0,0,1,1.44,5.48A5,5,0,0,1,634.9,540a12.85,12.85,0,0,0-1.08,3.87,17.18,17.18,0,0,0,.16,2.83c.28,2.72.59,5.8-.74,8.58a7.32,7.32,0,0,1-1.48,2c.14.26.26.52.38.8,1.58,3.73.68,8.42-.57,11.31a3.61,3.61,0,0,0-.25.93,7.47,7.47,0,0,1-1.78,3.93,18,18,0,0,1-3.65,2.9,18,18,0,0,0-1.94,1.39c-.56.51-1.12,1.16-1.72,1.83-1.84,2.09-4.7,5.34-9.26,5.34a11,11,0,0,1-3-.44,12.22,12.22,0,0,1-3.7-1.65,2.58,2.58,0,0,0-.68-.35l-.35-.15c-2.9-.28-7.81-4-9.37-6.16-2.71-3.78-3.06-6.3-1.39-10l.28-.65a9.75,9.75,0,0,1-3.27-7.8,8.33,8.33,0,0,1,.46-2.08,5.52,5.52,0,0,1-.72-.53,6.49,6.49,0,0,1-2.51-4.84,3,3,0,0,0-.29-1.13,9.38,9.38,0,0,0-1.72-2.45,18.37,18.37,0,0,1-3.79-6.13c-2.21-6.55.79-11.32,2.77-14.48a16.5,16.5,0,0,0,1.86-3.51,6.31,6.31,0,0,1-2.14-2.63,17.18,17.18,0,0,1-.87-4.5l0-.27c-.08-.37-.24-1-.42-1.72-1.08-4.26-1.29-5.29-1.12-6.54.63-4.55,3.75-7.79,6.26-10.4l.33-.35a5.92,5.92,0,0,1,.11-2.91c.28-1,1.34-4.29,3-5.84a10,10,0,0,1,7.08-2.36c1.56-1.87,3.87-4.48,7.61-4.49h0c2.59,0,5,1.31,7.13,3.88s2.54,6,2.9,9a17.52,17.52,0,0,0,.67,3.71c1.18,2,3,2.71,6.07,3.86a32,32,0,0,1,5.31,2.39c1.5.9,11,8.6,11,13.27a5.48,5.48,0,0,1-1.78,4.12l-.3.26a5,5,0,0,1,.1,2.21,4.92,4.92,0,0,1-2.08,3.3A15,15,0,0,0,637.78,531.19Z"/>
            <path :class="getWaterClass('ponkapoag-lake')" @click="selectWater('ponkapoag-lake')" :style="getWaterStyle('ponkapoag-lake')" @mouseover="hoverOn('ponkapoag-lake')" @mouseout="hoverOff('ponkapoag-lake')" d="M634,518.13c-.16.79-2.6,1.28-2.8,2.44-.39,2.23,5,2.51.85,3.17-2.16.35.46,9.86,2.48,11.21a0,0,0,0,1,0,.09c-3.94-.38-5.19,5.6-5.57,8.12-.41,2.79,1.08,7.43-.14,10-.61,1.27-5.06,3.69-3.65,4s-1.28.55,1.07,1.44,2.21,5.66.83,8.85c-.78,1.81-.42,2.68-1.16,3.5-1.27,1.41-3.55,2.4-5.24,3.94-3.07,2.8-4.83,6.86-9.23,5.61-2.36-.68-2.09-1.14-3.94-1.85-1.12-.44.66-1-.37-1.49-2-1-.84.65-1.19,1s-4.64-2.28-5.91-4.06c-2.37-3.31-1.41-3.55-.35-6.3.57-1.5,5.38-7.26.67-7.73-.93-.09.5,3.44-1.86,2.71-.94-.29-2-2.45-1.92-3.77.21-2.48,4-5,1.47-6.94-1.14-.87-3.2.33-3.44.12-1.35-1.17-.27-1-1.39-4-1.22-3.22-4.25-4.85-5.45-8.41-2.66-7.88,5.78-11.25,5-18.44-.09-.85-2.41-1.88-2.66-2.49a26.12,26.12,0,0,1-.59-3.71c-.24-1.18-1.6-6.12-1.51-6.73.59-4.34,5.38-7.53,7.74-10.85.38-.52-1.56-.85-1.2-2.09a13.54,13.54,0,0,1,1.6-3.54c2.11-1.92,5.27-.42,6.34-1.43,2.2-2.35,4.4-6.73,8.3-2,2.21,2.66,1.32,9,3.12,12,3.17,5.31,8.83,5.42,13.1,8,2.92,1.75,8.56,8,8.56,9S634.26,517.73,634,518.13Z"/>
            <path :class="getBoundsClass('sidereal-lake')" @click="selectWater('sidereal-lake')" :style="getWaterBoundsStyle('sidereal-lake')" @mouseover="hoverOn('sidereal-lake')" @mouseout="hoverOff('sidereal-lake')" d="M607.39,382.17a17.94,17.94,0,0,1-2.65,2.81c-1.59,1.38-3.74,2.73-6,2.73a5.45,5.45,0,0,1-1.84-.32,5.67,5.67,0,0,1-3.58-6.43c0-.1,0-.21.05-.32a5,5,0,0,1-1.54-1.62,20.11,20.11,0,0,1-2-5.75,23.11,23.11,0,0,0-.71-2.56,6.28,6.28,0,0,1-2.74-1.3,5.82,5.82,0,0,1-1.83-2.67,10.09,10.09,0,0,1-3.32-1.78,6.35,6.35,0,0,1-1.31-1.41,5,5,0,0,1-3-.65h0a6.42,6.42,0,0,1-3.31-4.48,5.81,5.81,0,0,1-2.73-1.75l0,0a5,5,0,0,1-.13-6.53.66.66,0,0,1,0-.14,5.61,5.61,0,0,1-2,1,26,26,0,0,1-3.48.61c-.43.06-.86.11-1.28.18h0a5,5,0,0,1-4.83-2,28.27,28.27,0,0,1-7.71.37,6.12,6.12,0,0,1-2.4-.63,6.83,6.83,0,0,1-2.49.78l-.44.06a13.39,13.39,0,0,1-1.78.21,6.3,6.3,0,0,1-3.06-.79c-3.73,2.38-6.86,2.31-9.31-.2a6.83,6.83,0,0,1-2-6.51c1.1-4.39,6.23-6,8.42-6.68l.22-.07a11.49,11.49,0,0,1,5.33-.73,8,8,0,0,0,1.12,0c.49,0,1.47,0,2.52,0,.77,0,2,0,2.6,0a7.89,7.89,0,0,0,1.26-.83,13.28,13.28,0,0,1,4.56-2.39,10.75,10.75,0,0,1,6.51.24c.29.09.49.15.64.18,2.67-2.29,5.63-1.72,8-.94a8.1,8.1,0,0,1,3.69,2.43l.63-.12c6.6-1.32,10.7.71,12.2,6a7.59,7.59,0,0,1-1.7,7l.13.17,0,.05a22.73,22.73,0,0,1,4.9,1.28l.49.17c.58.1,1.07.16,1.48.21,3.27.41,5.08,1.15,7.84,4.7a14.5,14.5,0,0,1,2.64,5.56c.1.35.21.73.34,1.15A12.59,12.59,0,0,0,605,363a22.25,22.25,0,0,1,1.78,3.56C609.34,373.46,609.54,378.58,607.39,382.17Z"/>
            <path :class="getWaterClass('sidereal-lake')" @click="selectWater('sidereal-lake')" :style="getWaterStyle('sidereal-lake')" @mouseover="hoverOn('sidereal-lake')" @mouseout="hoverOff('sidereal-lake')" d="M603.1,379.61c-.21.35-5.29,5.17-4.84,2.06.12-.85,2.58-4.65,2.58-4.57-.06-6.13-4.66-.53-4.73-.64-1.66-2.83-1.43-7.14-3.67-9.84-.92-1.12-2.19-.45-2.93-1.06s-.36-2.29-.72-2.52c-1.64-1.06-2.91-.72-4.48-2-1.22-1,.25-2.35-1.42-3.23-1.33-.7-4.17.38-3.54.75-1.73-1-.34-1.77-1.51-2.67,1,.74-1.16-2.67-1-2.06a22.44,22.44,0,0,1-2.38-.55c1.57,1.74,1.11-4.12,1.08-4.31a12.72,12.72,0,0,0-2.57-4.87c1,.8-5.27-.36-5-.41-.74.13.12,2.22-.67,2.43-1.27.34-2.83.45-4.25.68.26,0,2.47-4.2,2-4.59-1.9-1.52-4.62,1.94-5.78,2.3a21,21,0,0,1-7.69.61c-1-.06-1.22-1.44-2.5-1.33-.47,0-2.65,1.49-3.12,1.49-.11,0-1.62.25-1.82.25-.84,0-2.09-1.48-2.74-1.48-1.9,0-4.42,3.62-6,2-2.86-2.93,3.58-4.66,4.69-5,2.75-.92,2.75-.34,5.08-.44,1.15-.05,5.34.07,5.9-.07,2.57-.66,3.77-2.7,6.13-3.34,3-.79,3.8.79,6.63.65,3.23-.17,1.35-2.67,5.62-1.24,2.26.75,1.3,2.12,4.26,2.72,2.29.46,7.61-2.82,9,2.22.62,2.24-2.4,3.24-2.26,5.45.19,3,2.7,3.68,3.15,6.62-.44-2.82,5.77,0,6.69.15,3.72.67,4-.07,6.48,3.09,1.39,1.8,1.49,3.06,2.15,5.15.78,2.43,2.32,4.14,3.11,6.27C603.21,371.29,604.86,376.67,603.1,379.61Z"/>
            <path :class="getBoundsClass('coconino-marsh')" @click="selectWater('coconino-marsh')" :style="getWaterBoundsStyle('coconino-marsh')" @mouseover="hoverOn('coconino-marsh')" @mouseout="hoverOff('coconino-marsh')" d="M494.94,373.71c0-.11-.08-.22-.11-.33a7.8,7.8,0,0,0-5.17-5.35,5.82,5.82,0,0,0-2.25-.24,7.15,7.15,0,0,0-1.71-2.31,13.2,13.2,0,0,0-5-2.6,8,8,0,0,1-.79-.27,13.84,13.84,0,0,0-4-.64,6.9,6.9,0,0,0-5.56-.35,13,13,0,0,0-4.41,2.82l-1-.67c-.5-.31-1.19-.76-1.57-1a10.51,10.51,0,0,0-1.54-3l-1-1.22-1.82-2.1-.21-.25a5,5,0,0,0-4.81-1.58,12.6,12.6,0,0,0-5,3.11,7,7,0,0,0-3.19-.42,23.69,23.69,0,0,0-.31-2.8c-.76-4-3.74-4.65-4.63-4.76l-.62,0a8.16,8.16,0,0,0-.84-1.54c-2.45-3.37-5.1-5.62-10.13-5.66h-.14a11.33,11.33,0,0,0-9.62,4.69,7.36,7.36,0,0,1-1.77,1.69c-.2,0-.64,0-1,0a10.23,10.23,0,0,0-4.76.87,10.34,10.34,0,0,0-2.63,1.85c-.82-.12-1.7-.2-2.63-.29l-.81-.08q-4.56-4.11-8.32-1.63H395.2a5,5,0,0,0-4.61-2.05,27.84,27.84,0,0,0-9.86,3.88c-3.26,2.29-4.11,4.19-4.48,6.7a6.15,6.15,0,0,1-.15.81,7.06,7.06,0,0,0-3.27,6.82l-.5.44a24.73,24.73,0,0,0-2.34,2.24c-3.17,3.47-4.4,6.58-3.78,9.5a6,6,0,0,0,2.65,3.85,8.11,8.11,0,0,0-.21,3.2,19,19,0,0,0,1.16,3.08,30,30,0,0,0-2.32,2.27,13,13,0,0,0-1.38,1.81,5.57,5.57,0,0,0-1.31.32c-.23.1-.69.24-1.23.43-4.32,1.46-6.49,2.19-7.66,4.37a7.77,7.77,0,0,0,1.13,9.07,12,12,0,0,0,1.54,1.42c0,.15,0,.31-.05.49-.13.35-.43,1.08-.64,1.59-1.37,3.34-2.2,5.36-1.35,7.65a8.08,8.08,0,0,0,4.58,5.08c3.16,1.23,5.95-.19,7.79-1.14l.86-.43a22.6,22.6,0,0,1,1.41,1.89,22,22,0,0,0,2.39,3,16.82,16.82,0,0,0,6.34,3.51,17,17,0,0,1,2.33,1,13,13,0,0,1,2.76,5.28,5,5,0,0,0-.18,3.31,9.62,9.62,0,0,0,1,1.77l0,0c.12.14.23.27.35.39,1.59,2.18,4.44,5.09,7.57,4.85a5.21,5.21,0,0,0,4-2.41,28.57,28.57,0,0,0,1.8,3.8c2.68,4.65,5.73,6,10.2,6a33.32,33.32,0,0,0,3.45-.2c5.76-.6,8.57-2.73,12.32-7a19.56,19.56,0,0,0,4.19-7.81,27.08,27.08,0,0,1,1.2-3.24,30.85,30.85,0,0,1,2.55-4.25c.66-1,1.34-2,2-3.09a5,5,0,0,0,7-1.89c.65-.13,1.45-.24,2-.32,2.61-.37,5.57-.78,6.9-3.78,1.56-3.49,0-6.89-4.61-10.1a5.66,5.66,0,0,0-.07-1.48c.08-.08.16-.15.23-.23,1,.32,2.35.82,3.2,1.13,1.53.57,2.51.93,3.3,1.13a28,28,0,0,0,4.72.59c.72.06,1.72.13,2.55.23a5,5,0,0,0,7.2,2.35c.49-.2,1.53-.58,2.4-.9,7-2.58,9.6-3.72,11.07-5.42l.68-.77a7,7,0,0,0,2.08-4.13c.05-.29.12-.7.27-1.34a17.29,17.29,0,0,0,.29-3,8.2,8.2,0,0,0,2.23-3.95,28.05,28.05,0,0,0,.71-3.69,4.37,4.37,0,0,1,.71-2.36,7.19,7.19,0,0,1,1.3-1,12.17,12.17,0,0,0,3.76-3.52l0,0a5,5,0,0,0,.76-2.71c.05-.62.21-1.79.37-2.71A5,5,0,0,0,494.94,373.71Zm-44.79-8.58a.75.75,0,0,1,.09-.55A1.15,1.15,0,0,1,450.15,365.13Zm-79.42,29.13a1.14,1.14,0,0,1,.15.23l-.15-.22-.17-.24A2,2,0,0,1,370.73,394.26Z"/>
            <path :class="getWaterClass('coconino-marsh')" @click="selectWater('coconino-marsh')" :style="getWaterStyle('coconino-marsh')" @mouseover="hoverOn('coconino-marsh')" @mouseout="hoverOff('coconino-marsh')" d="M490.82,376.54c-1.07-1.39-1.85,6.37-1.75,6.22-1.09,1.74-3.7,2.4-5,4.46-1.73,2.67-1.14,4.06-2,7.49-.58,2.17-1.78,1.9-2.41,2.86.23-.34-.09,4-.15,4.25-.71,3.06,0,1.82-1.93,4.09-1.37,1.57-12.19,5-12.29,5.32,1.06-3.85-7.15-2.86-10.65-3.74-1.69-.42-7.31-2.88-8.69-2.67-1.89.29-5.94,5.55-6.29,5.5,3.11.42,2.53,1.93-.08,1.36-.28-.06-.72,2.61-.26,3.14,1.59,1.82,2.76-.13,3.76.54s4.49,2.76,3.71,4.5c-.55,1.24-9,.48-8.69,3.74-.64-7.07-4-4.61-5.91-.19-1.54,3.49-4,5.94-5.75,9.72-1.86,4-1.63,6.49-4.59,9.82-3.19,3.61-4.9,4.88-9.1,5.31-5.49.57-6.86,0-8.8-3.33-1.67-2.89-1.93-5.23-3.89-8-.22-.3-3.26-3.5-3.52-3.62-2.28-1-2.84,7.24-2.86,7.39-.21,1.55-4-3.17-4-3.16,2.59,3.08.22-3.25.36-2.54a17.86,17.86,0,0,0-4.34-8.31c-1.94-1.8-6.47-2.29-8.54-4.35-1.76-1.76-3.36-5.5-5.92-6.42-3.65-1.31-7.84,5.47-9.95-.2-.28-.76,2-5.4,2.19-6.44a22.72,22.72,0,0,0,.12-4.56c0,.31-5-1.88-3.23-5.11.32-.6,5.3-2.11,6.34-2.52a1.41,1.41,0,0,0,1.9,0c1.12-.84,1.63-2.34,2.61-3.39,2.16-2.33,3.76-3.18,5.49-5.33-.82,1-3-3.7-3-4.1-.25-1.79,1.34-2.89.69-5-.46-1.53-2.88-1-3.19-2.42-.35-1.63,1.48-3.88,2.58-5.09,1.75-1.91,2.87-2.33,4.11-4.17.42-.63-.28-2.57.18-3.57s2-1.38,2.51-2.57c1.42-3.32-.2-3.64,3.12-6a23.34,23.34,0,0,1,7.55-3A1.47,1.47,0,0,1,391,354c.4.82,6.17.54,7,.6,2.92.22,1.42-2.44,4.5.35.27.24-.82,1-.86,1s10.2.6,9.19,1.39c.81-.64,1.58-2.26,3.26-3.08s3.87.18,5.92-1c3.93-2.24,3.65-5.82,9.1-5.77,2.74,0,4.14.87,6.12,3.6.85,1.17,2.48,8.94,4.77,3.78.74-1.68,1.12,8.72.24,7.85,1.87,1.85,5.31-1.45,7.18-.17.81.55-.65,2.45,1.61,3.17a3.06,3.06,0,0,0,.82-1.7.86.86,0,0,1,.24,1.12c-.19-.61.92-1.65,1.52-1.61-2-.11,2.17-3.81,3.31-4.06,0,0,2.77,3.21,2.84,3.3.8,1.06.84,2.22,1.38,2.9,1.3,1.63,4.73,3,6.27,4.84a46.62,46.62,0,0,1,2.82,4.24,1.21,1.21,0,0,1-.83.9c-.13.88,2.59-.33,2.05-.7,2,1.39,5.35-4.63,3.51-6.9,0,0-3.18,3-4.09,2.32-1.54-1.24,1.81-3.6,3-4,1.54-.52,1.72.41,3.15.69a17,17,0,0,1,2.84.18c1.21.51,3.17.85,4.41,2s.76,3.25,2.41,4.26,2.37-1,3.43-.64C490.14,373.41,489.85,375.26,490.82,376.54Z"/>

        </g>
    `,
    data() {
        return {
            status: [],
            waterStatus: [],
            ready: false,
            areas: ['body', 'unknown', 'san-yara', 'ursa-madeum', 'biazo'],
            waters: ['lake-ashville', 'great-sine', 'ponkapoag-lake', 'sidereal-lake', 'coconino-marsh']
        }
    },
    mounted() {
        this.startStatus();
        console.log('Hello Terrenus')
        console.log(this.model);
        Event.$on('hoverArea', this.hoverArea)
    },
    computed: {
        activeWaters: function () {
            var result = false;
            for (var i = 0; i < this.waterStatus.length; i++) {
                var target = this.waterStatus[i];
                if (target.isSelected)
                    result = true;
            }
            return result;
        }  
    },
    methods: {
        // @@ fix water cursor and active click selection.
        // 
        selectWater(name) {
            if (this.ready) {
                var elt = this.getWaterStatus(name);
                elt.isSelected = !elt.isSelected;
                console.log(`Selecting ${name} : ${elt.isSelected}`)
                if (!elt.isSelected) {
                    Event.$emit('clearSelection')
                }
            }
        },
        hoverArea(name) {
            console.log(`Receiving message for ${name}`)
            this.setStatus(name, 'hover', true)
        },
        startStatus() {
            var self = this, mirror = [];
            for (var i = 0; i < this.areas.length; i++) {
                var child = {
                    name: self.areas[i],
                    hover: false,
                    active: false,
                };
                mirror.push(child)
            }
            self.status = mirror;
            for (var w = 0; w < this.waters.length; w++) {
                var child = {
                    name: self.waters[w],
                    hover: false,
                    active: false,
                };
                mirror.push(child)
            }
            self.waterStatus = mirror;
            self.ready = true;
        },
        getAreaClass(area) {
            var result = 'map-bounds-' + area
            return result;
        },
        getBoundsClass(bounds) {
            var result = 'map-bounds-' + bounds
            return result;
        },
        getWaterClass(bounds) {
            var result = 'map-water-' + bounds
            return result;
        },
        getWaterStyle(area) {
            var style = '';

            if (this.ready) {
                var elt = this.getWaterStatus(area);
                // console.log(elt)
                for (var i = 0; i < this.status.length; i++) {
                    if (this.status[i].name == name)
                        result = this.status[i];
                }
                // console.log(`${this.status[i].name} ? ${name} ? ${result}`)
                if ((!elt.hover) && (!elt.active)) {
                    // console.log('Default')
                    style += 'fill: ' + this.$root.getCSS('color-water') + ';';
                    style += 'stroke: ' + this.$root.getCSS('color-shore') + ';';
                } else if (elt.hover) {
                    // console.log(`Hovering over water: ${elt.name}`)
                    style += 'fill: ' + this.$root.getCSS('color-water-hover') + ';';
                    style += 'stroke: ' + this.$root.getCSS('color-shore-hover') + ';';
                }
                return style;
            } else {
                this.startStatus();
                // console.log('Not ready yet')
            }
        },
        getAreaStyle(area) {
            if (this.ready) {
                var style = '', elt = this.getStatus(area);
                for (var i = 0; i < this.status.length; i++) {
                    if (this.status[i].name == name)
                    result = this.status[i];
                }
                if ((!elt.hover) && (!elt.active)) {
                    style += 'fill: ' + this.$root.getCSS('color-terrain') + ';';
                    style += 'stroke: ' + this.$root.getCSS('color-shore') + ';';
                } else if (elt.hover) {
                    // console.log(`Hovering over ${elt.name}`)
                    if (/body/.test(elt.name)) {
                        style += 'fill: ' + this.$root.getCSS('color-terrain-hover') + ';';
                        style += 'stroke: ' + this.$root.getCSS('color-shore-hover') + ';';
                    } else {
                        style += 'fill: ' + this.$root.getCSS('color-water-hover') + ';';
                        style += 'stroke: ' + this.$root.getCSS('color-shore-hover') + ';';
                    }
                }
                return style;
            } else {
                this.startStatus();
                // console.log('Not ready yet')
            }
        },
        getBoundsStyle(bounds) {
            var style = '';
            style += 'fill: ' + this.$root.getCSS('color-coast') + ';';
            return style;
        },
        getWaterBoundsStyle(bounds) {
            var style = 'cursor:pointer;';
            style += 'fill: ' + this.$root.getCSS('color-coast') + ';';
            return style;
        },
        hoverOn(name) {
            if (!this.$root.selection.length) {
                if (!/(lake|sine|marsh)/.test(name)) {
                    this.clearStatus(name)
                    this.setStatus(name, 'hover', true);
                } else {
                    this.setStatus('body', 'hover', true)
                    this.setWaterStatus(name, 'hover', true)
                }
            }
        },
        hoverOff(name) {
            if (!this.$root.selection.length) {
                this.clearStatus();
            }
        },
        setStatus(name, attr, state) {
            for (var i = 0; i < this.status.length; i++) {
                var targ = this.status[i];
                if (targ.name == name) {
                    targ[attr] = state;
                }
            }
        },
        getStatus(name) {
            var result;
            for (var i = 0; i < this.status.length; i++) {
                // console.log(`${this.status[i].name} ? ${name}`)
                if (this.status[i].name == name)
                    result = this.status[i];
            }
            // console.log(`Status of ${name} is ${result}`)
            return result;
        },
        clearStatus(except=null) {
            for (var i = 0; i < this.status.length; i++) {
                var targ = this.status[i];
                if (targ.name !== except) {
                    targ.hover = false;
                    targ.active = false;
                }
            }
        },
        setWaterStatus(name, attr, state) {
            for (var i = 0; i < this.waterStatus.length; i++) {
                var targ = this.waterStatus[i];
                if (targ.name == name) {
                    targ[attr] = state;
                }
            }
        },
        getWaterStatus(name) {
            var result;
            if (this.waterStatus.length) {
                for (var i = 0; i < this.waterStatus.length; i++) {
                    if (this.waterStatus[i].name == name)
                        result = this.waterStatus[i];
                }
                return result;
            } else {
                return false;
            }
        },
        clearWaterStatus(except = null) {
            for (var i = 0; i < this.waterStatus.length; i++) {
                var targ = this.waterStatus[i];
                if (targ.name !== except) {
                    targ.hover = false;
                    targ.active = false;
                }
            }
        },
    }
})

Vue.component('mod-keys', {
    template: `
    <div 
      v-mousemove-outside="onMouseOutside"
      v-keydown-outside="onKeyDownOutside"
      v-keyup-outside="onKeyUpOutside"
      class="visualizerModKeys" 
      :style="'grid-template-columns: repeat(' + this.activeList.length + ', 1fr);'">
      <div v-for="modKey in activeList" :class="getModKeyClass(modKey)"></div>
    </div>
  `,
    data() {
        return {
            activeList: [
                { name: 'Ctrl' },
                { name: 'Shift' },
                { name: 'Alt' },
            ],
            Shift: false,
            Ctrl: false,
            Alt: false,
        }
    },
    mounted() {
        var self = this;
        this.activeMods();
        Event.$on('updateModsUI', self.updateMods);
        Event.$on('clearMods', self.clearMods);
    },
    methods: {
        activeMods() {
            var mirror = [], child = {};
            if (this.Ctrl) {
                child = { name: 'Ctrl', key: 0 }
                mirror.push(child);
            }
            if (this.Shift) {
                child = { name: 'Shift', key: 1 }
                mirror.push(child);
            }
            if (this.Alt) {
                child = { name: 'Alt', key: 2 }
                mirror.push(child);
            }
            this.activeList = mirror;
        },
        clearMods() {
            this.Shift = false;
            this.Alt = false;
            this.Ctrl = false;
            this.activeList = [];
        },
        updateMods() {
            this.Ctrl = this.$root.Ctrl;
            this.Shift = this.$root.Shift;
            this.Alt = this.$root.Alt;
            this.activeMods();
        },
        getModKeyClass(type) {
            return 'modKey-' + type.name + '-Active'
        },
        onMouseOutside(e, el) {
            // console.log(e)
            this.$root.parseModifiers(e);
        },
        onKeyDownOutside(e, el) {
            // console.log(e)
            this.$root.parseModifiers(e);
        },
        onKeyUpOutside(e, el) {
            // console.log(e)
            this.$root.parseModifiers(e);
        },
    },
    computed: {
        isDefault: function () { return this.$root.isDefault },
    },
})

var app = new Vue({
    el: '#app',
    data: {
        msg: 'Hello world-app',
        isWake: false,
        selection: [],
        active: 4,
        activeName: 'terrenus',
        activeCoords: [50, 75],
        Shift: false,
        Ctrl: false,
        Alt: false,
        macOS: false,
    },
    computed: {
        isDefault: function() {
            var result = true;
            if ((this.Ctrl) || (this.Shift) || (this.Alt))
                result = false
            return result;
        }
    },
    mounted() {
        console.log(this.msg)
        if (navigator.platform.indexOf('Win') > -1) { this.macOS = false; } else if (navigator.platform.indexOf('Mac') > -1) { this.macOS = true; }
        Event.$on('updateSelection', this.updateSelection);
        Event.$on('clearSelection', this.clearSelection);
        // Event.$on('clearMods', clearMods)
    },
    methods: {
        clearSelection() {
            console.log('Clearing master selection')
            this.selection = [];
            console.log(this.selection)
        },
        updateSelection(label) {
            if (typeof label === 'String') {
                this.selection = [label];
                console.log('Label is a string')
            } else {
                this.selection = [].concat(this.selection, label)
            }
            console.log(this.selection)
        },
        wake() {
            this.isWake = true;
        },
        sleep() {
            this.isWake = false;
        },
        getCSS(prop) {
            return window.getComputedStyle(document.documentElement).getPropertyValue('--' + prop);
        },
        setCSS(prop, data) {
            document.documentElement.style.setProperty('--' + prop, data);
        },
        parseCoordinates(evt) {
            var ratioX = (1000/(window.innerWidth*.8)), ratioY = (1000/(window.innerWidth*.8))
            var xpos = Math.floor(evt.clientX * ratioX), ypos = Math.floor(evt.clientY * ratioY);
            xpos = xpos/10, ypos = ypos/10;
            if (((xpos >= 0) && (ypos >= 0)) && ((xpos <= 100) && (ypos <= 100))) {
                this.$root.activeCoords = [xpos, ypos];
            } else {
                if (xpos < 0)
                    xpos = 0;
                else if (xpos > 100)
                    xpos = 100;
                if (ypos < 0)
                    ypos = 0;
                else if (ypos > 100)
                    ypos = 100;   
            }
        },
        percentage(total, num) {
            return(total/num);
        },
        parseModifiers(evt) {
            this.parseCoordinates(evt)
            // console.log(evt)
            var lastMods = [this.Ctrl, this.Shift, this.Alt]
            if (this.isWake) {
                if (((!this.macOS) && (evt.ctrlKey)) || ((this.macOS) && (evt.metaKey))) {
                    this.Ctrl = true;
                } else {
                    this.Ctrl = false;
                }
                if (evt.shiftKey)
                    this.Shift = true;
                else
                    this.Shift = false;
                if (evt.altKey) {
                    evt.preventDefault();
                    this.Alt = true;
                } else {
                    this.Alt = false;
                };
                var thisMods = [this.Ctrl, this.Shift, this.Alt]
                if (!this.isEqualArray(lastMods, thisMods))
                    console.log(`${thisMods} : ${lastMods}`)
                Event.$emit('updateModsUI');
            } else {
                Event.$emit('clearMods');
            }
        },
        flushModifiers() {
            this.Ctrl = false;
            this.Shift = false;
            this.Alt = false;
            Event.$emit('clearMods');
        },
        isEqualArray(array1, array2) {
            array1 = array1.join().split(','), array2 = array2.join().split(',');
            var errors = 0, result;
            for (var i = 0; i < array1.length; i++) {
                if (array1[i] !== array2[i])
                    errors++;
            }
            if (errors > 0)
                result = false;
            else
                result = true;
            return result;
        },
    }
})